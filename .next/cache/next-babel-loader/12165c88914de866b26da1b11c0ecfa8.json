{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user'; // reducer들을 합치기\n\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case HYDRATE:\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user: user\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/reducers/index.js"],"names":["HYDRATE","combineReducers","user","rootReducer","index","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;;AACA,IAAMC,WAAW,GAAGF,eAAe,CAAC;AAChCG,EAAAA,KAAK,EAAE,iBAAsB;AAAA,QAArBC,KAAqB,uEAAf,EAAe;AAAA,QAAXC,MAAW;;AACzB,YAAOA,MAAM,CAACC,IAAd;AACI,WAAKP,OAAL;AACI,+CAAYK,KAAZ,GAAsBC,MAAM,CAACE,OAA7B;;AACJ;AACI,eAAOH,KAAP;AAJR;AAMH,GAR+B;AAShCH,EAAAA,IAAI,EAAJA;AATgC,CAAD,CAAnC;AAYA,eAAeC,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\n\nimport user from './user';\n\n// reducer들을 합치기\nconst rootReducer = combineReducers({\n    index: (state={}, action) => {\n        switch(action.type) {\n            case HYDRATE:\n                return { ...state, ...action.payload };\n            default:\n                return state;\n        }\n    },\n    user,\n});\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}