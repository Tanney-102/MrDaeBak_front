{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/SignupForm.js\";\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport useInput from '../hooks/useInput';\nimport theme from '../style/theme';\nimport { Form, InputContainer, Input } from './LoginForm/style';\nconst url = 'https://mr-daebak.herokuapp.com'; // const url = 'http://localhost:5000'\n\nconst VerifyBtn = styled.button.withConfig({\n  displayName: \"SignupForm__VerifyBtn\",\n  componentId: \"pv1d3z-0\"\n})([\"width:19%;color:#5DB09B;font-size:0.7rem;border:1px solid black;@media \", \"{width:28%}\"], theme.mobileL);\nconst InputContainer2 = styled(InputContainer).withConfig({\n  displayName: \"SignupForm__InputContainer2\",\n  componentId: \"pv1d3z-1\"\n})([\"width:70%;@media \", \"{width:85%}@media \", \"{width:95%\"], theme.mobileL, theme.mobileS);\nconst Input2 = styled(Input).withConfig({\n  displayName: \"SignupForm__Input2\",\n  componentId: \"pv1d3z-2\"\n})([\"width:80%;@media \", \"{width:70%}\"], theme.mobileL);\nconst Indicator = styled.div.withConfig({\n  displayName: \"SignupForm__Indicator\",\n  componentId: \"pv1d3z-3\"\n})([\"width:70%;height:15px;padding:0 4px;color:#5DB09B;font-size:0.7rem;display:flex;align-items:center;\"]);\n\nconst SignupForm = () => {\n  const [id, onChangeId] = useInput('');\n  const [name, onChangeName] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const [password2, onChangePassword2] = useInput('');\n  const {\n    0: idFocus,\n    1: setIdFocus\n  } = useState(false);\n  const {\n    0: nameFocus,\n    1: setNameFocus\n  } = useState(false);\n  const {\n    0: pwFocus,\n    1: setPwFocus\n  } = useState(false);\n  const {\n    0: Pw2Focus,\n    1: setPw2Focus\n  } = useState(false);\n  const {\n    0: idChecked,\n    1: setIdChecked\n  } = useState(false);\n  const {\n    0: nameChecked,\n    1: setNameChecked\n  } = useState(false);\n  const {\n    0: validPw,\n    1: setValidPw\n  } = useState(false);\n  const {\n    0: btnActivation,\n    1: setBtnActivation\n  } = useState(false);\n  const inputRef_id = useRef(null);\n  const inputRef_name = useRef(null);\n  const inputContRef_id = useRef(null);\n  const inputContRef_name = useRef(null);\n  const verifyId = useCallback(async () => {\n    if (idChecked) return;\n    await axios.post(url + '/duplicate_id', {\n      user_id: id\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.data.check_id_dup && confirm('사용가능한 아이디입니다. 사용하시겠습니까?')) {\n        setIdChecked(true);\n        inputRef_id.current.setAttribute('readonly', 'readonly');\n        inputRef_id.current.style.backgroundColor = '#dfdfdf';\n        inputContRef_id.current.style.backgroundColor = '#dfdfdf';\n      } else {\n        alert('이미 사용 중인 아이디입니다.');\n      }\n    }).catch(err => console.error(err));\n  }, [id, idChecked]);\n  const verifyName = useCallback(async () => {\n    if (nameChecked) return;\n    await axios.post(url + '/duplicate_name', {\n      user_name: name\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.data.check_name_dup && confirm('사용가능한 닉네임입니다. 사용하시겠습니까?')) {\n        setNameChecked(true);\n        inputRef_name.current.setAttribute('readonly', 'readonly');\n        inputRef_name.current.style.backgroundColor = '#dfdfdf';\n        inputContRef_name.current.style.backgroundColor = '#dfdfdf';\n      } else {\n        alert('이미 사용 중인 닉네임입니다.');\n      }\n    }).catch(err => console.error(err));\n  }, [name, nameChecked]);\n  const isValidPw = useCallback(e => {\n    onChangePassword(e);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      height: '400px',\n      marginTop: '30px'\n    },\n    onSubmit: e => {\n      e.preventDefault();\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputContainer2, {\n      ref: inputContRef_id,\n      children: [/*#__PURE__*/_jsxDEV(Input2, {\n        ref: inputRef_id,\n        type: \"text\",\n        value: id,\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        autoComplete: \"off\",\n        onChange: onChangeId,\n        onFocus: () => setIdFocus(true),\n        onBlur: () => setIdFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VerifyBtn, {\n        className: \"btn-hover\",\n        onClick: verifyId,\n        children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Indicator, {\n      style: {\n        color: idChecked ? '' : '#B36A59'\n      },\n      children: idFocus && (idChecked ? '사용 가능한 아이디입니다.' : '아이디 중복확인을 해주세요')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer2, {\n      ref: inputContRef_name,\n      children: [/*#__PURE__*/_jsxDEV(Input2, {\n        ref: inputRef_name,\n        type: \"text\",\n        value: name,\n        placeholder: \"\\uB2C9\\uB124\\uC784\",\n        autoComplete: \"off\",\n        onChange: onChangeName,\n        onFocus: () => setNameFocus(true),\n        onBlur: () => setNameFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VerifyBtn, {\n        className: \"btn-hover\",\n        onClick: verifyName,\n        children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Indicator, {\n      style: {\n        color: idChecked ? '' : '#B36A59'\n      },\n      children: nameFocus && (nameChecked ? '사용 가능한 닉네임입니다.' : '닉네임 중복확인을 해주세요')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer2, {\n      children: /*#__PURE__*/_jsxDEV(Input2, {\n        type: \"password\",\n        value: password,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        autoComplete: \"off\",\n        onChange: isValidPw\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer2, {\n      children: /*#__PURE__*/_jsxDEV(Input2, {\n        type: \"password\",\n        value: password2,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        autoComplete: \"off\",\n        onChange: onChangePassword2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/SignupForm.js"],"names":["React","useCallback","useState","useRef","useEffect","axios","styled","useInput","theme","Form","InputContainer","Input","url","VerifyBtn","button","mobileL","InputContainer2","mobileS","Input2","Indicator","div","SignupForm","id","onChangeId","name","onChangeName","password","onChangePassword","password2","onChangePassword2","idFocus","setIdFocus","nameFocus","setNameFocus","pwFocus","setPwFocus","Pw2Focus","setPw2Focus","idChecked","setIdChecked","nameChecked","setNameChecked","validPw","setValidPw","btnActivation","setBtnActivation","inputRef_id","inputRef_name","inputContRef_id","inputContRef_name","verifyId","post","user_id","headers","then","res","data","check_id_dup","confirm","current","setAttribute","style","backgroundColor","alert","catch","err","console","error","verifyName","user_name","check_name_dup","isValidPw","e","height","marginTop","preventDefault","color"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useRef, useEffect } from 'react'\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport useInput from '../hooks/useInput';\nimport theme from '../style/theme';\nimport { Form, InputContainer, Input } from './LoginForm/style';\n\nconst url = 'https://mr-daebak.herokuapp.com'\n// const url = 'http://localhost:5000'\n\nconst VerifyBtn = styled.button`\n    width: 19%;\n    color:#5DB09B;\n    font-size:0.7rem;\n    border:1px solid black;\n\n    @media ${theme.mobileL} {\n        width:28%\n    }\n`;\n\nconst InputContainer2 = styled(InputContainer)`\n    width:70%;\n\n    @media ${theme.mobileL} {\n        width:85%\n    }\n\n    @media ${theme.mobileS} {\n        width:95%\n            \n`;\n\nconst Input2 = styled(Input)`\n    width:80%;\n\n    @media ${theme.mobileL} {\n        width:70%\n    }    \n`;\n\nconst Indicator = styled.div`\n    width: 70%;\n    height:15px;\n    padding: 0 4px;\n    color:#5DB09B;\n    font-size:0.7rem;\n\n    display:flex;\n    align-items:center;\n`;\n\nconst SignupForm = () => {\n    const [id, onChangeId] = useInput('');\n    const [name ,onChangeName] = useInput('');\n    const [password, onChangePassword] = useInput('');\n    const [password2, onChangePassword2] =useInput('');\n    const [idFocus, setIdFocus] = useState(false);\n    const [nameFocus, setNameFocus] = useState(false);\n    const [pwFocus, setPwFocus] = useState(false);\n    const [Pw2Focus, setPw2Focus] = useState(false);\n    const [idChecked, setIdChecked] = useState(false);\n    const [nameChecked, setNameChecked] = useState(false);\n    const [validPw, setValidPw] = useState(false);\n    const [btnActivation, setBtnActivation] = useState(false);\n    const inputRef_id = useRef(null);\n    const inputRef_name = useRef(null);\n    const inputContRef_id = useRef(null);\n    const inputContRef_name = useRef(null);\n\n    const verifyId = useCallback(async () => {\n        if(idChecked) return;\n\n        await axios.post(url+'/duplicate_id', {\n                user_id : id\n            }, {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n        .then(res => {\n            if(res.data.check_id_dup && confirm('사용가능한 아이디입니다. 사용하시겠습니까?')) {\n                setIdChecked(true);\n                inputRef_id.current.setAttribute('readonly', 'readonly');\n                inputRef_id.current.style.backgroundColor = '#dfdfdf'\n                inputContRef_id.current.style.backgroundColor = '#dfdfdf'\n            } else {\n                alert('이미 사용 중인 아이디입니다.');\n            }\n        })\n        .catch(err => console.error(err));\n    }, [id, idChecked]);\n\n    const verifyName = useCallback(async () => {\n        if(nameChecked) return;\n\n        await axios.post(url+'/duplicate_name', {\n            user_name : name\n        }, {\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    })\n    .then(res => {\n        if(res.data.check_name_dup && confirm('사용가능한 닉네임입니다. 사용하시겠습니까?')) {\n            setNameChecked(true);\n            inputRef_name.current.setAttribute('readonly', 'readonly');\n            inputRef_name.current.style.backgroundColor = '#dfdfdf'\n            inputContRef_name.current.style.backgroundColor = '#dfdfdf'\n        } else {\n            alert('이미 사용 중인 닉네임입니다.');\n        }\n    })\n    .catch(err => console.error(err));\n    }, [name, nameChecked]);\n\n    const isValidPw = useCallback((e) => {\n        onChangePassword(e);\n    }, []);\n    \n    return (\n        <Form style={{height:'400px', marginTop:'30px'}} onSubmit={e => { e.preventDefault(); }}>\n            {/* id input */}\n            <InputContainer2 ref={inputContRef_id}>\n                <Input2 ref={inputRef_id} type=\"text\" value={id} placeholder=\"아이디\" autoComplete=\"off\"\n                    onChange={onChangeId} \n                    onFocus={()=>setIdFocus(true)}\n                    onBlur={()=>setIdFocus(false)}\n                    />\n                <VerifyBtn className=\"btn-hover\" onClick={verifyId}>중복확인</VerifyBtn>\n            </InputContainer2>\n            <Indicator style={{color:idChecked?'':'#B36A59'}}>\n                {idFocus && (idChecked ? '사용 가능한 아이디입니다.' : '아이디 중복확인을 해주세요')}\n            </Indicator>\n            {/* name input */}\n            <InputContainer2 ref={inputContRef_name}>\n                <Input2 ref={inputRef_name} type=\"text\" value={name} placeholder=\"닉네임\" autoComplete=\"off\"\n                    onChange={onChangeName} \n                    onFocus={()=>setNameFocus(true)}\n                    onBlur={()=>setNameFocus(false)}\n                    />\n                <VerifyBtn className=\"btn-hover\" onClick={verifyName}>중복확인</VerifyBtn>\n            </InputContainer2>\n            <Indicator style={{color:idChecked?'':'#B36A59'}}>\n                {nameFocus && (nameChecked ? '사용 가능한 닉네임입니다.' : '닉네임 중복확인을 해주세요')}\n            </Indicator>\n            {/* pw input */}\n            <InputContainer2>\n                <Input2 type=\"password\" value={password} placeholder=\"비밀번호\" autoComplete=\"off\" onChange={isValidPw} />\n            </InputContainer2>\n            <InputContainer2>\n                <Input2 type=\"password\" value={password2} placeholder=\"비밀번호 확인\" autoComplete=\"off\" onChange={onChangePassword2} />\n            </InputContainer2>\n        </Form>\n    );\n};\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}