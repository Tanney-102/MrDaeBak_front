{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/SignupForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport useInput from '../hooks/useInput';\nimport { Form, InputContainer, Input } from './LoginForm/style';\nvar url = 'https://mr-daebak.herokuapp.com'; // const url = 'http://localhost:5000'\n\nvar VerifyBtn = styled.button.withConfig({\n  displayName: \"SignupForm__VerifyBtn\",\n  componentId: \"pv1d3z-0\"\n})([\"width:19%;color:#5DB09B;font-size:0.8rem;\"]);\n_c = VerifyBtn;\nvar Input2 = styled(Input).withConfig({\n  displayName: \"SignupForm__Input2\",\n  componentId: \"pv1d3z-1\"\n})([\"width:80%;\"]);\n_c2 = Input2;\nvar Indicator = styled.div.withConfig({\n  displayName: \"SignupForm__Indicator\",\n  componentId: \"pv1d3z-2\"\n})([\"width:70%;height:15px;padding:0 4px;color:#5DB09B;font-size:0.7rem;display:flex;align-items:center;\"]);\n_c3 = Indicator;\n\nvar SignupForm = function SignupForm() {\n  _s();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      name = _useInput4[0],\n      onChangeName = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var _useInput7 = useInput(''),\n      _useInput8 = _slicedToArray(_useInput7, 2),\n      password2 = _useInput8[0],\n      onChangePassword2 = _useInput8[1];\n\n  var _useState = useState(false),\n      idChecked = _useState[0],\n      setIdChecked = _useState[1];\n\n  var _useState2 = useState(false),\n      nameChecked = _useState2[0],\n      setNameChecked = _useState2[1];\n\n  var _useState3 = useState(false),\n      btnActivation = _useState3[0],\n      setBtnActivation = _useState3[1];\n\n  var inputRef_id = useRef(null);\n  var inputRef_name = useRef(null);\n  var inputContRef_id = useRef(null);\n  var inputContRef_name = useRef(null);\n  var verifyId = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!idChecked) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return axios.post(url + '/duplicate_id', {\n              user_id: id\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then(function (res) {\n              if (res.data.check_id_dup && confirm('사용가능한 아이디입니다. 사용하시겠습니까?')) {\n                setIdChecked(true);\n                inputRef_id.current.setAttribute('readonly', 'readonly');\n                inputRef_id.current.style.backgroundColor = '#dfdfdf';\n                inputContRef_id.current.style.backgroundColor = '#dfdfdf';\n              } else {\n                alert('이미 사용 중인 아이디입니다.');\n              }\n            })[\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [id, idChecked]);\n  var verifyName = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!nameChecked) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            _context2.next = 4;\n            return axios.post(url + '/duplicate_name', {\n              user_name: name\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then(function (res) {\n              if (res.data.check_name_dup && confirm('사용가능한 닉네임입니다. 사용하시겠습니까?')) {\n                setNameChecked(true);\n                inputRef_name.current.setAttribute('readonly', 'readonly');\n                inputRef_name.current.style.backgroundColor = '#dfdfdf';\n                inputContRef_name.current.style.backgroundColor = '#dfdfdf';\n              } else {\n                alert('이미 사용 중인 닉네임입니다.');\n              }\n            })[\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [name, nameChecked]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      height: '400px',\n      marginTop: '30px'\n    },\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n      style: {\n        width: '70%'\n      },\n      ref: inputContRef_id,\n      children: [/*#__PURE__*/_jsxDEV(Input2, {\n        ref: inputRef_id,\n        type: \"text\",\n        value: id,\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        autoComplete: \"off\",\n        onChange: onChangeId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(VerifyBtn, {\n        className: \"btn-hover\",\n        onClick: verifyId,\n        children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Indicator, {\n      style: {\n        color: idChecked ? '' : '#B36A59'\n      },\n      children: idChecked ? '사용 가능한 아이디입니다.' : '아이디 중복확인을 해주세요'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      style: {\n        width: '70%'\n      },\n      ref: inputContRef_name,\n      children: [/*#__PURE__*/_jsxDEV(Input2, {\n        ref: inputRef_name,\n        type: \"text\",\n        value: name,\n        placeholder: \"\\uB2C9\\uB124\\uC784\",\n        autoComplete: \"off\",\n        onChange: onChangeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(VerifyBtn, {\n        className: \"btn-hover\",\n        onClick: verifyName,\n        children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      style: {\n        width: '70%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Input2, {\n        type: \"text\",\n        value: password,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        autoComplete: \"off\",\n        onChange: onChangePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      style: {\n        width: '70%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Input2, {\n        type: \"text\",\n        value: password2,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        autoComplete: \"off\",\n        onChange: onChangePassword2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(SignupForm, \"ZPSzrqFlKJUlhr+oCdRBVYNiK4s=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c4 = SignupForm;\nexport default SignupForm;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"VerifyBtn\");\n$RefreshReg$(_c2, \"Input2\");\n$RefreshReg$(_c3, \"Indicator\");\n$RefreshReg$(_c4, \"SignupForm\");","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/SignupForm.js"],"names":["React","useCallback","useState","useRef","useEffect","axios","styled","useInput","Form","InputContainer","Input","url","VerifyBtn","button","Input2","Indicator","div","SignupForm","id","onChangeId","name","onChangeName","password","onChangePassword","password2","onChangePassword2","idChecked","setIdChecked","nameChecked","setNameChecked","btnActivation","setBtnActivation","inputRef_id","inputRef_name","inputContRef_id","inputContRef_name","verifyId","post","user_id","headers","then","res","data","check_id_dup","confirm","current","setAttribute","style","backgroundColor","alert","err","console","error","verifyName","user_name","check_name_dup","height","marginTop","e","preventDefault","width","color"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useRef, useEffect } from 'react'\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport useInput from '../hooks/useInput';\nimport { Form, InputContainer, Input } from './LoginForm/style';\n\nconst url = 'https://mr-daebak.herokuapp.com'\n// const url = 'http://localhost:5000'\n\nconst VerifyBtn = styled.button`\n    width: 19%;\n    color:#5DB09B;\n    font-size:0.8rem;\n`;\n\nconst Input2 = styled(Input)`\n    width:80%;\n`;\n\nconst Indicator = styled.div`\n    width: 70%;\n    height:15px;\n    padding: 0 4px;\n    color:#5DB09B;\n    font-size:0.7rem;\n\n    display:flex;\n    align-items:center;\n`;\n\nconst SignupForm = () => {\n    const [id, onChangeId] = useInput('');\n    const [name ,onChangeName] = useInput('');\n    const [password, onChangePassword] = useInput('');\n    const [password2, onChangePassword2] =useInput('');\n    const [idChecked, setIdChecked] = useState(false);\n    const [nameChecked, setNameChecked] = useState(false);\n    const [btnActivation, setBtnActivation] = useState(false);\n    const inputRef_id = useRef(null);\n    const inputRef_name = useRef(null);\n    const inputContRef_id = useRef(null);\n    const inputContRef_name = useRef(null);\n\n    const verifyId = useCallback(async () => {\n        if(idChecked) return;\n\n        await axios.post(url+'/duplicate_id', {\n                user_id : id\n            }, {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n        .then(res => {\n            if(res.data.check_id_dup && confirm('사용가능한 아이디입니다. 사용하시겠습니까?')) {\n                setIdChecked(true);\n                inputRef_id.current.setAttribute('readonly', 'readonly');\n                inputRef_id.current.style.backgroundColor = '#dfdfdf'\n                inputContRef_id.current.style.backgroundColor = '#dfdfdf'\n            } else {\n                alert('이미 사용 중인 아이디입니다.');\n            }\n        })\n        .catch(err => console.error(err));\n    }, [id, idChecked]);\n\n    const verifyName = useCallback(async () => {\n        if(nameChecked) return;\n\n        await axios.post(url+'/duplicate_name', {\n            user_name : name\n        }, {\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    })\n    .then(res => {\n        if(res.data.check_name_dup && confirm('사용가능한 닉네임입니다. 사용하시겠습니까?')) {\n            setNameChecked(true);\n            inputRef_name.current.setAttribute('readonly', 'readonly');\n            inputRef_name.current.style.backgroundColor = '#dfdfdf'\n            inputContRef_name.current.style.backgroundColor = '#dfdfdf'\n        } else {\n            alert('이미 사용 중인 닉네임입니다.');\n        }\n    })\n    .catch(err => console.error(err));\n    }, [name, nameChecked]);\n    \n    return (\n        <Form style={{height:'400px', marginTop:'30px'}} onSubmit={e => { e.preventDefault(); }}>\n            <InputContainer style={{width:'70%'}} ref={inputContRef_id}>\n                <Input2 ref={inputRef_id} type=\"text\" value={id} placeholder=\"아이디\" autoComplete=\"off\" onChange={onChangeId} />\n                <VerifyBtn className=\"btn-hover\" onClick={verifyId}>중복확인</VerifyBtn>\n            </InputContainer>\n            <Indicator style={{color:idChecked?'':'#B36A59'}}>\n                {idChecked ? '사용 가능한 아이디입니다.' : '아이디 중복확인을 해주세요'}\n            </Indicator>\n            <InputContainer style={{width:'70%'}} ref={inputContRef_name}>\n                <Input2 ref={inputRef_name} type=\"text\" value={name} placeholder=\"닉네임\" autoComplete=\"off\" onChange={onChangeName} />\n                <VerifyBtn className=\"btn-hover\" onClick={verifyName}>중복확인</VerifyBtn>\n            </InputContainer>\n            <InputContainer style={{width:'70%'}}>\n                <Input2 type=\"text\" value={password} placeholder=\"비밀번호\" autoComplete=\"off\" onChange={onChangePassword} />\n            </InputContainer>\n            <InputContainer style={{width:'70%'}}>\n                <Input2 type=\"text\" value={password2} placeholder=\"비밀번호 확인\" autoComplete=\"off\" onChange={onChangePassword2} />\n            </InputContainer>\n        </Form>\n    );\n};\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}