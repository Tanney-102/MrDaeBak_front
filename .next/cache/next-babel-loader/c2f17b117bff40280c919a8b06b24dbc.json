{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/LoginForm/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { useDispatch } from 'react-redux';\nimport theme from '../../style/theme';\nimport useInput from '../../hooks/useInput';\nimport { Form, Title, InputContainer, Input, ButtonContainer, Button, Partition, HorizontalLine, GuestLogin } from './style';\nimport { loginRequest, LOG_IN } from '../../reducers/user';\nimport axios from 'axios';\n\nvar LoginForm = function LoginForm(_ref) {\n  _s();\n\n  var loginFormType = _ref.loginFormType;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var _useState = useState(false),\n      btnActivation = _useState[0],\n      setBtnActivation = _useState[1];\n\n  var loginFormRef = useRef();\n  var dispatch = useDispatch();\n  var orderASGuest = useCallback(function () {\n    dispatch({\n      type: LOG_IN,\n      data: {\n        userId: 'guest',\n        userName: 'guest',\n        classification: 'guest'\n      }\n    });\n  }, []);\n  var login = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var form;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (btnActivation) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            form = new FormData(loginFormRef.current);\n            form.append('login_type', loginFormType);\n            loginRequest(form);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [btnActivation]);\n  var fakeManager = useCallback(function () {\n    dispatch({\n      type: LOG_IN,\n      data: {\n        userId: 'guest',\n        userName: 'guest',\n        classification: 'manager'\n      }\n    });\n  }, []);\n  useEffect(function () {\n    if (id != '' && password.length > 5) {\n      setBtnActivation(true);\n    } else {\n      setBtnActivation(false);\n    }\n  }, [id, password]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    ref: loginFormRef,\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: loginFormType === 'member' ? '회원 로그인' : '관리자 로그인'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"user_id\",\n        value: id,\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        autoComplete: \"off\",\n        onChange: onChangeId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        name: \"user_password\",\n        value: password,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        autoComplete: \"off\",\n        onChange: onChangePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      style: {\n        justifyContent: loginFormType === 'manager' ? 'flex-end' : ''\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: btnActivation ? \"btn-hover\" : \"\",\n        style: {\n          backgroundColor: btnActivation ? '#4c4a49' : 'rgba(76, 74, 73, 0.55)'\n        },\n        onClick: login,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, _this), loginFormType === 'member' && /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-hover\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 42\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 48\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, _this), loginFormType === 'member' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Partition, {\n        children: [/*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '0.9rem',\n            color: theme.fontGray\n          },\n          children: \"\\uB610\\uB294\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(GuestLogin, {\n        className: \"btn-hover\",\n        type: \"button\",\n        onClick: orderASGuest,\n        children: \"\\uBE44\\uD68C\\uC6D0\\uC73C\\uB85C \\uC8FC\\uBB38\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true), loginFormType === 'manager' && /*#__PURE__*/_jsxDEV(GuestLogin, {\n      className: \"btn-hover\",\n      type: \"button\",\n      onClick: fakeManager,\n      children: \"\\uC0AC\\uC7A5\\uB2D8 \\uD398\\uC774\\uC9C0 \\uB458\\uB7EC\\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(LoginForm, \"5v3wdEvNSlCsB5yw4V3ubzOG5Tk=\", false, function () {\n  return [useInput, useInput, useDispatch];\n});\n\n_c = LoginForm;\nLoginForm.propTypes = {\n  loginFormType: PropTypes.string.isRequired\n};\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/LoginForm/index.js"],"names":["React","useState","useEffect","useCallback","useRef","PropTypes","Link","useDispatch","theme","useInput","Form","Title","InputContainer","Input","ButtonContainer","Button","Partition","HorizontalLine","GuestLogin","loginRequest","LOG_IN","axios","LoginForm","loginFormType","id","onChangeId","password","onChangePassword","btnActivation","setBtnActivation","loginFormRef","dispatch","orderASGuest","type","data","userId","userName","classification","login","form","FormData","current","append","fakeManager","length","e","preventDefault","justifyContent","backgroundColor","fontSize","color","fontGray","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { useDispatch } from 'react-redux';\n\nimport theme from '../../style/theme';\nimport useInput from '../../hooks/useInput';\nimport { Form, Title, InputContainer, Input, ButtonContainer, Button, Partition, HorizontalLine, GuestLogin } from './style'; \nimport { loginRequest, LOG_IN } from '../../reducers/user';\nimport axios from 'axios';\n\nconst LoginForm = ({ loginFormType }) => {\n    const [id, onChangeId] = useInput('');\n    const [password, onChangePassword] = useInput('');\n    const [btnActivation, setBtnActivation] = useState(false);\n    const loginFormRef = useRef();\n    const dispatch = useDispatch();\n\n    const orderASGuest = useCallback(() => {\n        dispatch({ \n            type : LOG_IN,\n            data : {\n                userId: 'guest',\n                userName: 'guest',\n                classification: 'guest'\n            }\n        });\n    },[]);\n\n    const login = useCallback(async () => {\n        if(!btnActivation) return;\n\n        const form = new FormData(loginFormRef.current);\n        form.append('login_type', loginFormType);\n\n        loginRequest(form);\n    }, [btnActivation]);\n\n    const fakeManager = useCallback(() => {\n        dispatch({ \n            type : LOG_IN,\n            data : {\n                userId: 'guest',\n                userName: 'guest',\n                classification: 'manager'\n            }\n        });\n    },[]);\n\n    useEffect(() => {\n        if(id != '' && password.length > 5) {\n            setBtnActivation(true);\n        } else {\n            setBtnActivation(false);\n        }\n    }, [id, password]);\n\n    return (\n        <Form ref={loginFormRef} onSubmit={e => { e.preventDefault(); }}>\n            <Title>{loginFormType==='member' ? '회원 로그인' : '관리자 로그인'}</Title>\n            <InputContainer className=\"input-container\">\n                <Input type=\"text\" name=\"user_id\" value={id} placeholder=\"아이디\" autoComplete=\"off\" onChange={onChangeId} />\n            </InputContainer>\n            <InputContainer className=\"input-container\">\n                <Input type=\"password\" name=\"user_password\" value={password} placeholder=\"비밀번호\" autoComplete=\"off\" onChange={onChangePassword} />\n            </InputContainer>\n            <ButtonContainer style={{justifyContent:loginFormType==='manager'?'flex-end':''}}>\n                <Button \n                    className={btnActivation ? \"btn-hover\" : \"\"} \n                    style={{backgroundColor: btnActivation?'#4c4a49':'rgba(76, 74, 73, 0.55)'}}\n                    onClick={login}\n                    >\n                    로그인\n                </Button>\n                {loginFormType === 'member' && <Button className=\"btn-hover\">\n                    <Link href=\"/signup\"><a>    \n                        회원가입\n                    </a></Link>\n                </Button>}\n            </ButtonContainer>\n            {loginFormType === 'member' && \n            <>\n            <Partition>\n                <HorizontalLine />\n                <span style={{fontSize: '0.9rem', color: theme.fontGray}}>또는</span>\n                <HorizontalLine />\n            </Partition>\n            <GuestLogin className=\"btn-hover\" type=\"button\" onClick={orderASGuest}>비회원으로 주문하기</GuestLogin>\n            </>}\n            {loginFormType === 'manager' && \n                <GuestLogin className=\"btn-hover\" type=\"button\" onClick={fakeManager}>\n                    사장님 페이지 둘러보기\n                </GuestLogin>\n            }\n        </Form>\n    );\n};\n\nLoginForm.propTypes = {\n    loginFormType: PropTypes.string.isRequired,\n};\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}