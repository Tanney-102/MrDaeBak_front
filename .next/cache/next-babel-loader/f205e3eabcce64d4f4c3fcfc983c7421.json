{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/OrderForm/OptionSelectForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FormContainer, ContentCard, OptionLi, NameCard, Title, SizeUpBtn } from './style';\nimport { optionsDummy } from './dummy';\nimport LoadingPage from '../LoadingPage';\n\nconst getOpList = () => {\n  return optionsDummy;\n};\n\nconst OptionSelectForm = ({\n  dinnerId\n}) => {\n  const {\n    0: optionList,\n    1: setOptionList\n  } = useState({});\n  const {\n    0: extraBtnAct,\n    1: setExtraBtnAct\n  } = useState([]);\n  const {\n    0: loaded,\n    1: setLoaded\n  } = useState(false);\n  const sizeup = useCallback(idx => {\n    setExtraBtnAct(prev => {\n      const newState = [...prev];\n      newState[idx] ^= 1;\n      return newState;\n    });\n  }, []);\n\n  const removeOption = idx => {\n    console.log(typeof idx);\n    console.log('test');\n    console.log(optionList);\n    const opList = [];\n    optionList.options.forEach(v => {\n      const tmp = _objectSpread({}, v);\n\n      opList.push(tmp);\n    });\n    console.log(opList);\n    const extList = [];\n    optionList.extra.forEach(v => {\n      const tmp = _objectSpread({}, v);\n\n      extList.push(tmp);\n    });\n    extList.push(opList[idx]);\n    console.log(extList);\n\n    for (let i = idx + 1; i < opList.length; i++) {\n      opList[i - 1] = opList[i];\n    }\n\n    opList.pop();\n    console.log(opList); // setOptionList(prev => {\n    //     return {\n    //         options: opList,\n    //         extra: extList,\n    //     }\n    // });\n  };\n\n  const onClickOptionCard = useCallback(e => {\n    const sizeupBtnIdx = e.target.dataset.sizeupBtn;\n    const minusIconIdx = e.target.dataset.minusIcon;\n\n    if (sizeupBtnIdx !== undefined) {\n      sizeup(sizeupBtnIdx);\n    } else if (minusIconIdx !== undefined) {\n      removeOption(minusIconIdx);\n    }\n  }, []);\n  useEffect(() => {\n    const opList = getOpList();\n    setOptionList(opList);\n    setExtraBtnAct(Array(opList.options.length).fill(0));\n    setLoaded(true);\n  }, []);\n  console.log(optionList);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded ? /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ContentCard, {\n        onClick: onClickOptionCard,\n        style: {\n          flexWrap: 'wrap',\n          padding: '30px 0 20px',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          style: {\n            fontSize: '1.4rem',\n            width: '90%'\n          },\n          children: \"\\uC635\\uC158\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), optionList.options.map((option, i) => {\n          return /*#__PURE__*/_jsxDEV(OptionLi, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex'\n              },\n              children: [/*#__PURE__*/_jsxDEV(NameCard, {\n                style: {\n                  width: '80px'\n                },\n                children: option.menuName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"0.9rem\",\n                  color: \"#9c9a99\"\n                },\n                children: option.measure === '' ? extraBtnAct[i] ? 'extra' : 'normal' : Math.ceil(parseInt(option.size) * (extraBtnAct[i] ? 1.5 : 1)) + option.measure\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex'\n              },\n              children: [/*#__PURE__*/_jsxDEV(SizeUpBtn, {\n                style: {\n                  backgroundColor: extraBtnAct[i] ? '#3D7365' : '',\n                  color: extraBtnAct[i] ? '#eee' : ''\n                },\n                className: \"btn-hover\",\n                \"data-sizeup-btn\": i,\n                children: \"size up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-hover\",\n                \"data-minus-icon\": i,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  \"data-minus-icon\": i,\n                  className: \"btn-hover\",\n                  icon: faMinusCircle,\n                  style: {\n                    color: 'red',\n                    fontSize: '0.9rem',\n                    position: 'relative',\n                    top: '4px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, option.menuName + i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ContentCard, {\n        style: {\n          borderStyle: 'dashed',\n          flexWrap: 'wrap',\n          padding: '30px 0 20px',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          style: {\n            fontSize: '1.4rem',\n            width: '90%'\n          },\n          children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this), optionList.extra.map((list, i) => {\n          return /*#__PURE__*/_jsxDEV(OptionLi, {\n            children: [/*#__PURE__*/_jsxDEV(NameCard, {\n              children: list.menuName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              \"data-plus-icon\": i,\n              className: \"btn-hover\",\n              icon: faPlusCircle,\n              style: {\n                color: 'green',\n                fontSize: '0.9rem',\n                position: 'relative',\n                top: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)]\n          }, list.menuName + i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport default OptionSelectForm;","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/OrderForm/OptionSelectForm.js"],"names":["React","useState","useEffect","useCallback","useDispatch","FontAwesomeIcon","faPlusCircle","faMinusCircle","FormContainer","ContentCard","OptionLi","NameCard","Title","SizeUpBtn","optionsDummy","LoadingPage","getOpList","OptionSelectForm","dinnerId","optionList","setOptionList","extraBtnAct","setExtraBtnAct","loaded","setLoaded","sizeup","idx","prev","newState","removeOption","console","log","opList","options","forEach","v","tmp","push","extList","extra","i","length","pop","onClickOptionCard","e","sizeupBtnIdx","target","dataset","sizeupBtn","minusIconIdx","minusIcon","undefined","Array","fill","flexWrap","padding","justifyContent","fontSize","width","map","option","display","menuName","color","measure","Math","ceil","parseInt","size","backgroundColor","position","top","borderStyle","list"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport { FormContainer, ContentCard, OptionLi, NameCard, Title, SizeUpBtn } from './style';\nimport { optionsDummy } from './dummy';\nimport LoadingPage from '../LoadingPage';\n\nconst getOpList = () => {\n    return optionsDummy;\n};\n\nconst OptionSelectForm = ({ dinnerId }) => {\n    const [optionList, setOptionList] = useState({});\n    const [extraBtnAct, setExtraBtnAct] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n\n    const sizeup = useCallback((idx) => {\n        setExtraBtnAct(prev => {\n            const newState = [...prev];\n            newState[idx] ^= 1;\n\n            return newState;\n        });\n    }, []);\n\n    const removeOption = (idx) => {\n        console.log(typeof idx);\n        console.log('test');\n        console.log(optionList);\n        const opList = [];\n        optionList.options.forEach(v => {\n            const tmp = {...v};\n            opList.push(tmp);\n        });\n        console.log(opList);\n\n        const extList = [];\n        optionList.extra.forEach(v => {\n            const tmp = {...v};\n            extList.push(tmp);\n        });\n        extList.push(opList[idx]);\n        console.log(extList);\n\n        for(let i = idx+1; i < opList.length; i++) {\n            opList[i-1] = opList[i];\n        }\n        opList.pop();\n        console.log(opList);\n\n\n        // setOptionList(prev => {\n        //     return {\n        //         options: opList,\n        //         extra: extList,\n        //     }\n        // });\n    };\n\n    const onClickOptionCard = useCallback((e) => {\n        const sizeupBtnIdx = e.target.dataset.sizeupBtn;\n        const minusIconIdx = e.target.dataset.minusIcon;\n\n        if(sizeupBtnIdx !== undefined) {\n            sizeup(sizeupBtnIdx);\n        } else if(minusIconIdx!== undefined) {\n            removeOption(minusIconIdx);\n        }\n    }, []);\n\n    useEffect(() => {\n        const opList = getOpList();\n\n        setOptionList(opList);\n        setExtraBtnAct(Array(opList.options.length).fill(0));\n        setLoaded(true);\n    }, []);\n    console.log(optionList);\n    return (\n        <>\n        {loaded ?\n        <FormContainer>\n            <ContentCard \n                onClick={onClickOptionCard}\n                style={{\n                    flexWrap:'wrap', \n                    padding:'30px 0 20px',\n                    justifyContent:'center',\n                    }}>\n                <Title style={{\n                    fontSize:'1.4rem',\n                    width:'90%',\n                }}>\n                    옵션\n                </Title>\n                {optionList.options.map((option, i) => {\n                    return (\n                        <OptionLi key={option.menuName + i}>\n                            <div style={{display:'flex'}}>\n                                <NameCard style={{width:'80px'}}>\n                                    {option.menuName}\n                                </NameCard>\n                                <div style={{\n                                    fontSize:\"0.9rem\",\n                                    color:\"#9c9a99\"\n                                }}>\n                                    {option.measure === '' \n                                    ? (extraBtnAct[i] ? 'extra' : 'normal')\n                                    : Math.ceil(parseInt(option.size) * (extraBtnAct[i] ? 1.5 : 1)) + option.measure\n                                    }\n                                </div>\n                            </div>\n                            <div style={{display:'flex'}}>\n                                <SizeUpBtn \n                                    style={{\n                                        backgroundColor: extraBtnAct[i] ? '#3D7365' : '',\n                                        color: extraBtnAct[i] ? '#eee' : '',\n                                    }}\n                                    className=\"btn-hover\" \n                                    data-sizeup-btn={i}\n                                    >\n                                        size up\n                                    </SizeUpBtn>\n                                <button className=\"btn-hover\" data-minus-icon={i}>\n                                    <FontAwesomeIcon \n                                        data-minus-icon={i}\n                                        className=\"btn-hover\"\n                                        icon={faMinusCircle} \n                                        style={{\n                                            color:'red',\n                                            fontSize:'0.9rem',\n                                            position:'relative',\n                                            top:'4px',\n                                        }}\n                                        />\n                                </button>\n                            </div>\n                        </OptionLi>\n                    );\n                })}\n            </ContentCard>\n            <ContentCard style={{\n                borderStyle:'dashed',\n                flexWrap:'wrap', \n                padding:'30px 0 20px',\n                justifyContent:'center',\n                }}>\n                <Title style={{\n                        fontSize:'1.4rem',\n                        width:'90%',\n                    }}>\n                    추가하기\n                </Title>\n                {optionList.extra.map((list, i) => {\n                    return (\n                        <OptionLi key={list.menuName+i}>\n                            <NameCard>\n                                {list.menuName}\n                            </NameCard>\n                            <FontAwesomeIcon \n                                    data-plus-icon={i}\n                                    className=\"btn-hover\"\n                                    icon={faPlusCircle} \n                                    style={{\n                                        color:'green',\n                                        fontSize:'0.9rem',\n                                        position:'relative',\n                                        top:'4px',\n                                    }}\n                                    />\n                        </OptionLi>\n                    );\n                })}\n            </ContentCard>\n        </FormContainer> :\n        <LoadingPage /> }\n        </>\n    );\n};\n\nexport default OptionSelectForm"]},"metadata":{},"sourceType":"module"}