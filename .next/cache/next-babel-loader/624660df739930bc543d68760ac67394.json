{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/LoginForm/index.js\";\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { useDispatch } from 'react-redux';\nimport theme from '../../style/theme';\nimport useInput from '../../hooks/useInput';\nimport { Form, Title, InputContainer, Input, ButtonContainer, Button, Partition, HorizontalLine, GuestLogin } from './style';\nimport { login, LOG_IN } from '../../reducers/user';\nimport axios from 'axios';\n\nconst LoginForm = ({\n  loginFormType\n}) => {\n  const [id, onChangeId] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: btnActivation,\n    1: setBtnActivation\n  } = useState(false);\n  const loginFormRef = useRef();\n  const dispatch = useDispatch();\n  const orderASGuest = useCallback(() => {\n    dispatch(login({\n      userId: 'guest',\n      userName: 'guest',\n      classification: 'guest'\n    }));\n  }, []);\n  const login = useCallback(async () => {\n    if (!btnActivation) return;\n    console.log('test');\n    const form = new FormData(loginFormRef.current);\n    form.append('login_type', loginFormType);\n    await axios.post('/login', form).then(res => {\n      const result = res.data;\n\n      if (result.success == 'true') {\n        dispatch({\n          type: LOG_IN,\n          action: {\n            userId: result.user_id,\n            userName: result.user_name,\n            classification: result.classification\n          }\n        });\n        axios.defaults.headers.common['Authorization'] = `Bearer ${result.access_token}`;\n      } else {\n        switch (result.message) {\n          case 'invalid id':\n            alert('유효하지 않은 아이디입니다.');\n            break;\n\n          case 'invalid pw':\n            alert('비밀번호가 틀렸습니다.');\n            break;\n\n          case 'invalid class':\n            alert('유효하지 않은 아이디입니다.');\n            break;\n\n          default:\n            alert('msg err');\n        }\n      }\n    }).catch(err => {\n      console.log(err);\n      alert('로그인에 실패했습니다. : ' + err);\n    });\n  }, [btnActivation]);\n  const fakeManager = useCallback(() => {\n    dispatch(login({\n      userId: 'guest',\n      userName: 'guest',\n      classification: 'manager'\n    }));\n  }, []);\n  useEffect(() => {\n    if (id != '' && password.length > 5) {\n      setBtnActivation(true);\n    } else {\n      setBtnActivation(false);\n    }\n\n    console.log(btnActivation);\n  }, [id, password]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    ref: loginFormRef,\n    onSubmit: e => {\n      e.preventDefault();\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: loginFormType === 'member' ? '회원 로그인' : '관리자 로그인'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"user_id\",\n        value: id,\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        autoComplete: \"off\",\n        onChange: onChangeId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        name: \"user_password\",\n        value: password,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        autoComplete: \"off\",\n        onChange: onChangePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      style: {\n        justifyContent: loginFormType === 'manager' ? 'flex-end' : ''\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: btnActivation ? \"btn-hover\" : \"\",\n        style: {\n          backgroundColor: btnActivation ? '#4c4a49' : 'rgba(76, 74, 73, 0.55)'\n        },\n        onClick: login,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), loginFormType === 'member' && /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-hover\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), loginFormType === 'member' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Partition, {\n        children: [/*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '0.9rem',\n            color: theme.fontGray\n          },\n          children: \"\\uB610\\uB294\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GuestLogin, {\n        className: \"btn-hover\",\n        type: \"button\",\n        onClick: orderASGuest,\n        children: \"\\uBE44\\uD68C\\uC6D0\\uC73C\\uB85C \\uC8FC\\uBB38\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), loginFormType === 'manager' && /*#__PURE__*/_jsxDEV(GuestLogin, {\n      className: \"btn-hover\",\n      type: \"button\",\n      onClick: fakeManager,\n      children: \"\\uC0AC\\uC7A5\\uB2D8 \\uD398\\uC774\\uC9C0 \\uB458\\uB7EC\\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\nLoginForm.propTypes = {\n  loginFormType: PropTypes.string.isRequired\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/LoginForm/index.js"],"names":["React","useState","useEffect","useCallback","useRef","PropTypes","Link","useDispatch","theme","useInput","Form","Title","InputContainer","Input","ButtonContainer","Button","Partition","HorizontalLine","GuestLogin","login","LOG_IN","axios","LoginForm","loginFormType","id","onChangeId","password","onChangePassword","btnActivation","setBtnActivation","loginFormRef","dispatch","orderASGuest","userId","userName","classification","console","log","form","FormData","current","append","post","then","res","result","data","success","type","action","user_id","user_name","defaults","headers","common","access_token","message","alert","catch","err","fakeManager","length","e","preventDefault","justifyContent","backgroundColor","fontSize","color","fontGray","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { useDispatch } from 'react-redux';\n\nimport theme from '../../style/theme';\nimport useInput from '../../hooks/useInput';\nimport { Form, Title, InputContainer, Input, ButtonContainer, Button, Partition, HorizontalLine, GuestLogin } from './style'; \nimport { login, LOG_IN } from '../../reducers/user';\nimport axios from 'axios';\n\nconst LoginForm = ({ loginFormType }) => {\n    const [id, onChangeId] = useInput('');\n    const [password, onChangePassword] = useInput('');\n    const [btnActivation, setBtnActivation] = useState(false);\n    const loginFormRef = useRef();\n    const dispatch = useDispatch();\n\n    const orderASGuest = useCallback(() => {\n        dispatch(login({\n            userId: 'guest',\n            userName: 'guest',\n            classification: 'guest'\n        }));\n    },[]);\n\n    const login = useCallback(async () => {\n        if(!btnActivation) return;\n        console.log('test');\n        const form = new FormData(loginFormRef.current);\n        form.append('login_type', loginFormType);\n\n        await axios.post('/login', form)\n        .then(res => {\n            const result = res.data;\n\n            if(result.success == 'true') {\n                dispatch({\n                    type: LOG_IN, \n                    action : {\n                        userId: result.user_id,\n                        userName: result.user_name,\n                        classification: result.classification\n                    }\n                })\n                axios.defaults.headers.common['Authorization'] = `Bearer ${result.access_token}`;\n            } else {\n                switch(result.message) {\n                    case 'invalid id':\n                        alert('유효하지 않은 아이디입니다.');\n                        break;\n                    case 'invalid pw':\n                        alert('비밀번호가 틀렸습니다.');\n                        break;\n                    case 'invalid class':\n                        alert('유효하지 않은 아이디입니다.');\n                        break;\n                    default:\n                        alert('msg err');\n                }\n            }\n        })\n        .catch(err => {\n            console.log(err);\n            alert('로그인에 실패했습니다. : ' + err);\n        });\n\n    }, [btnActivation]);\n\n    const fakeManager = useCallback(() => {\n        dispatch(login({\n            userId: 'guest',\n            userName: 'guest',\n            classification: 'manager'\n        }));\n    },[]);\n\n    useEffect(() => {\n        if(id != '' && password.length > 5) {\n            setBtnActivation(true);\n        } else {\n            setBtnActivation(false);\n        }\n        console.log(btnActivation);\n    }, [id, password]);\n\n    return (\n        <Form ref={loginFormRef} onSubmit={e => { e.preventDefault(); }}>\n            <Title>{loginFormType==='member' ? '회원 로그인' : '관리자 로그인'}</Title>\n            <InputContainer className=\"input-container\">\n                <Input type=\"text\" name=\"user_id\" value={id} placeholder=\"아이디\" autoComplete=\"off\" onChange={onChangeId} />\n            </InputContainer>\n            <InputContainer className=\"input-container\">\n                <Input type=\"password\" name=\"user_password\" value={password} placeholder=\"비밀번호\" autoComplete=\"off\" onChange={onChangePassword} />\n            </InputContainer>\n            <ButtonContainer style={{justifyContent:loginFormType==='manager'?'flex-end':''}}>\n                <Button \n                    className={btnActivation ? \"btn-hover\" : \"\"} \n                    style={{backgroundColor: btnActivation?'#4c4a49':'rgba(76, 74, 73, 0.55)'}}\n                    onClick={login}\n                    >\n                    로그인\n                </Button>\n                {loginFormType === 'member' && <Button className=\"btn-hover\">\n                    <Link href=\"/signup\"><a>    \n                        회원가입\n                    </a></Link>\n                </Button>}\n            </ButtonContainer>\n            {loginFormType === 'member' && \n            <>\n            <Partition>\n                <HorizontalLine />\n                <span style={{fontSize: '0.9rem', color: theme.fontGray}}>또는</span>\n                <HorizontalLine />\n            </Partition>\n            <GuestLogin className=\"btn-hover\" type=\"button\" onClick={orderASGuest}>비회원으로 주문하기</GuestLogin>\n            </>}\n            {loginFormType === 'manager' && \n                <GuestLogin className=\"btn-hover\" type=\"button\" onClick={fakeManager}>\n                    사장님 페이지 둘러보기\n                </GuestLogin>\n            }\n        </Form>\n    );\n};\n\nLoginForm.propTypes = {\n    loginFormType: PropTypes.string.isRequired,\n};\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}