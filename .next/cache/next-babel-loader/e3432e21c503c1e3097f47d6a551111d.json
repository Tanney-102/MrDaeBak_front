{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/SignupForm/index.js\";\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport useInput from '../../hooks/useInput';\nimport { Form, Title, ButtonContainer, Button } from '../LoginForm/style';\nimport { VerifyBtn, InputContainer2, Input2, Indicator } from './style';\nconst url = 'https://mr-daebak.herokuapp.com'; // const url = 'http://localhost:5000'\n\nconst SignupForm = () => {\n  const [id, onChangeId] = useInput('');\n  const [name, onChangeName] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const [password2, onChangePassword2] = useInput('');\n  const {\n    0: idFocus,\n    1: setIdFocus\n  } = useState(false);\n  const {\n    0: nameFocus,\n    1: setNameFocus\n  } = useState(false);\n  const {\n    0: pwFocus,\n    1: setPwFocus\n  } = useState(false);\n  const {\n    0: pw2Focus,\n    1: setPw2Focus\n  } = useState(false);\n  const {\n    0: idChecked,\n    1: setIdChecked\n  } = useState(false);\n  const {\n    0: nameChecked,\n    1: setNameChecked\n  } = useState(false);\n  const {\n    0: validPw,\n    1: setValidPw\n  } = useState(false);\n  const {\n    0: pwChecked,\n    1: setPwChecked\n  } = useState(false);\n  const {\n    0: btnActivation,\n    1: setBtnActivation\n  } = useState(false);\n  const inputRef_id = useRef(null);\n  const inputRef_name = useRef(null);\n  const inputContRef_id = useRef(null);\n  const inputContRef_name = useRef(null);\n  const formdataRef = useRef(null);\n  const verifyId = useCallback(async () => {\n    if (idChecked) return;\n\n    if (id.length < 5 || id.length > 15) {\n      alert(\"5~15자의 아이디를 입력해주세요.\");\n      console.log(id);\n      return;\n    }\n\n    await axios.post(url + '/duplicate_id', {\n      user_id: id\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.data.check_id_dup) {\n        if (confirm('사용가능한 아이디입니다. 사용하시겠습니까?')) {\n          setIdChecked(true);\n          inputRef_id.current.setAttribute('readonly', 'readonly');\n          inputRef_id.current.style.backgroundColor = '#dfdfdf';\n          inputContRef_id.current.style.backgroundColor = '#dfdfdf';\n        }\n      } else {\n        alert('이미 사용 중인 아이디입니다.');\n      }\n    }).catch(err => console.error(err));\n  }, [id, idChecked]);\n  const verifyName = useCallback(async () => {\n    if (nameChecked) return;\n\n    if (!name.length) {\n      alert(\"한 글자 이상의 닉네임을 입력해주세요.\");\n      return;\n    }\n\n    await axios.post(url + '/duplicate_name', {\n      user_name: name\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.data.check_name_dup) {\n        if (confirm('사용가능한 닉네임입니다. 사용하시겠습니까?')) {\n          setNameChecked(true);\n          inputRef_name.current.setAttribute('readonly', 'readonly');\n          inputRef_name.current.style.backgroundColor = '#dfdfdf';\n          inputContRef_name.current.style.backgroundColor = '#dfdfdf';\n        }\n      } else {\n        alert('이미 사용 중인 닉네임입니다.');\n      }\n    }).catch(err => console.error(err));\n  }, [name, nameChecked]);\n  const isValidPw = useCallback(e => {\n    onChangePassword(e);\n\n    if (/^[a-zA-Z0-9]{8,15}$/.test(e.target.value)) {\n      setValidPw(true);\n    } else {\n      setValidPw(false);\n    }\n  }, [password]);\n  const verifyPw = useCallback(e => {\n    onChangePassword2(e);\n\n    if (password === e.target.value) {\n      setPwChecked(true);\n    } else {\n      setPwChecked(false);\n    }\n  }, [password, password2]);\n  const submitSignupData = useCallback(async e => {\n    if (!btnActivation) {\n      console.log('false');\n      return;\n    }\n\n    const data = new FormData(formdataRef.current);\n    data.append('check_id_dup', idChecked.toString());\n    data.append('check_name_dup', nameChecked.toString());\n    await axios.post(url + '/signin_db', data).then(res => {\n      alert(\"가입에 성공했습니다! 로그인해주세요.\");\n      location.href = \"/\";\n    }).catch(err => console.error(err));\n  }, []);\n  useEffect(() => {\n    if (idChecked && nameChecked && validPw && pwChecked) {\n      setBtnActivation(true);\n    } else {\n      setBtnActivation(false);\n    }\n  }, [idChecked, nameChecked, validPw, pwChecked]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: e => {\n      e.preventDefault();\n    },\n    ref: formdataRef,\n    name: \"signup\",\n    style: {\n      height: '400px',\n      marginTop: '30px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      style: {\n        width: '70%',\n        fontSize: '1.5rem'\n      },\n      children: \"\\uC815\\uBCF4\\uC785\\uB825\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer2, {\n      ref: inputContRef_id,\n      children: [/*#__PURE__*/_jsxDEV(Input2, {\n        ref: inputRef_id,\n        type: \"text\",\n        value: id,\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        autoComplete: \"off\",\n        name: \"user_id\",\n        onChange: onChangeId,\n        onFocus: () => setIdFocus(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VerifyBtn, {\n        className: \"btn-hover\",\n        onClick: verifyId,\n        children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Indicator, {\n      style: {\n        color: idChecked ? '' : '#B36A59'\n      },\n      children: idChecked ? '사용 가능한 아이디입니다.' : idFocus && '아이디 중복확인을 해주세요'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer2, {\n      ref: inputContRef_name,\n      children: [/*#__PURE__*/_jsxDEV(Input2, {\n        ref: inputRef_name,\n        type: \"text\",\n        value: name,\n        placeholder: \"\\uB2C9\\uB124\\uC784\",\n        autoComplete: \"off\",\n        name: \"user_name\",\n        onChange: onChangeName,\n        onFocus: () => setNameFocus(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VerifyBtn, {\n        className: \"btn-hover\",\n        onClick: verifyName,\n        children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Indicator, {\n      style: {\n        color: nameChecked ? '' : '#B36A59'\n      },\n      children: nameChecked ? '사용 가능한 닉네임입니다.' : nameFocus && '닉네임 중복확인을 해주세요'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer2, {\n      children: /*#__PURE__*/_jsxDEV(Input2, {\n        type: \"password\",\n        value: password,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        autoComplete: \"off\",\n        name: \"user_password\",\n        onChange: isValidPw,\n        onFocus: () => setPwFocus(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Indicator, {\n      style: {\n        color: validPw ? '' : '#B36A59'\n      },\n      children: validPw ? '사용 가능한 비밀번호입니다.' : pwFocus && '영어 대소문자와 숫자로 이루어진 8~15자의 비밀번호를 사용하세요.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer2, {\n      children: /*#__PURE__*/_jsxDEV(Input2, {\n        type: \"password\",\n        value: password2,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        autoComplete: \"off\",\n        onChange: verifyPw,\n        onFocus: () => setPw2Focus(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Indicator, {\n      style: {\n        color: pwChecked ? '' : '#B36A59'\n      },\n      children: pwChecked ? '비밀번호가 일치합니다.' : pw2Focus && '비밀번호가 일치하지 않습니다.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      style: {\n        width: '70%',\n        justifyContent: 'flex-end'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: submitSignupData,\n        className: btnActivation ? \"btn-hover\" : \"\",\n        style: {\n          width: '30%',\n          backgroundColor: btnActivation ? '#4c4a49' : 'rgba(76, 74, 73, 0.55)'\n        },\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/SignupForm/index.js"],"names":["React","useCallback","useState","useRef","useEffect","axios","useInput","Form","Title","ButtonContainer","Button","VerifyBtn","InputContainer2","Input2","Indicator","url","SignupForm","id","onChangeId","name","onChangeName","password","onChangePassword","password2","onChangePassword2","idFocus","setIdFocus","nameFocus","setNameFocus","pwFocus","setPwFocus","pw2Focus","setPw2Focus","idChecked","setIdChecked","nameChecked","setNameChecked","validPw","setValidPw","pwChecked","setPwChecked","btnActivation","setBtnActivation","inputRef_id","inputRef_name","inputContRef_id","inputContRef_name","formdataRef","verifyId","length","alert","console","log","post","user_id","headers","then","res","data","check_id_dup","confirm","current","setAttribute","style","backgroundColor","catch","err","error","verifyName","user_name","check_name_dup","isValidPw","e","test","target","value","verifyPw","submitSignupData","FormData","append","toString","location","href","preventDefault","height","marginTop","width","fontSize","color","justifyContent"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useRef, useEffect } from 'react'\nimport axios from 'axios';\n\nimport useInput from '../../hooks/useInput';\nimport { Form, Title, ButtonContainer, Button} from '../LoginForm/style';\nimport {VerifyBtn, InputContainer2, Input2, Indicator} from './style';\n\nconst url = 'https://mr-daebak.herokuapp.com'\n// const url = 'http://localhost:5000'\n\nconst SignupForm = () => {\n    const [id, onChangeId] = useInput('');\n    const [name ,onChangeName] = useInput('');\n    const [password, onChangePassword] = useInput('');\n    const [password2, onChangePassword2] =useInput('');\n    const [idFocus, setIdFocus] = useState(false);\n    const [nameFocus, setNameFocus] = useState(false);\n    const [pwFocus, setPwFocus] = useState(false);\n    const [pw2Focus, setPw2Focus] = useState(false);\n    const [idChecked, setIdChecked] = useState(false);\n    const [nameChecked, setNameChecked] = useState(false);\n    const [validPw, setValidPw] = useState(false);\n    const [pwChecked, setPwChecked] = useState(false);\n    const [btnActivation, setBtnActivation] = useState(false);\n    const inputRef_id = useRef(null);\n    const inputRef_name = useRef(null);\n    const inputContRef_id = useRef(null);\n    const inputContRef_name = useRef(null);\n    const formdataRef = useRef(null);\n\n    const verifyId = useCallback(async () => {\n        if(idChecked) return;\n        if(id.length < 5 || id.length > 15) {\n            alert(\"5~15자의 아이디를 입력해주세요.\");\n            console.log(id);\n            return;\n        }\n\n        await axios.post(url+'/duplicate_id', {\n                user_id : id\n            }, {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n        .then(res => {\n            if(res.data.check_id_dup) {\n                if(confirm('사용가능한 아이디입니다. 사용하시겠습니까?')) {\n                    setIdChecked(true);\n                    inputRef_id.current.setAttribute('readonly', 'readonly');\n                    inputRef_id.current.style.backgroundColor = '#dfdfdf'\n                    inputContRef_id.current.style.backgroundColor = '#dfdfdf'\n                }\n            } else {\n                alert('이미 사용 중인 아이디입니다.');\n            }\n        })\n        .catch(err => console.error(err));\n    }, [id, idChecked]);\n\n    const verifyName = useCallback(async () => {\n        if(nameChecked) return;\n        if(!name.length) {\n            alert(\"한 글자 이상의 닉네임을 입력해주세요.\");\n            return;\n        }\n\n        await axios.post(url+'/duplicate_name', {\n            user_name : name\n        }, {\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    })\n    .then(res => {\n        if(res.data.check_name_dup) {\n            if(confirm('사용가능한 닉네임입니다. 사용하시겠습니까?')) {\n                setNameChecked(true);\n                inputRef_name.current.setAttribute('readonly', 'readonly');\n                inputRef_name.current.style.backgroundColor = '#dfdfdf'\n                inputContRef_name.current.style.backgroundColor = '#dfdfdf'\n            }\n        } else {\n            alert('이미 사용 중인 닉네임입니다.');\n        }\n    })\n    .catch(err => console.error(err));\n    }, [name, nameChecked]);\n\n    const isValidPw = useCallback((e) => {\n        onChangePassword(e);\n\n        if(/^[a-zA-Z0-9]{8,15}$/.test(e.target.value)) {\n            setValidPw(true);\n        } else {\n            setValidPw(false);\n        }\n\n    }, [password]);\n\n    const verifyPw = useCallback((e) => {\n        onChangePassword2(e);\n\n        if(password === e.target.value) {\n            setPwChecked(true);\n        } else {\n            setPwChecked(false);\n        }\n    }, [password, password2]);\n\n    const submitSignupData = useCallback(async (e) => {\n        if(!btnActivation) {\n            console.log('false');\n            return;\n        }\n\n        const data = new FormData(formdataRef.current);\n        data.append('check_id_dup', idChecked.toString());\n        data.append('check_name_dup', nameChecked.toString());\n\n        await axios.post(url+'/signin_db', data)\n        .then(res => {\n            alert(\"가입에 성공했습니다! 로그인해주세요.\");\n            location.href=\"/\"\n        })\n        .catch(err => console.error(err));\n    }, []);\n    \n    useEffect(() => {\n        if(idChecked && nameChecked && validPw && pwChecked) {\n            setBtnActivation(true);\n        } else {\n            setBtnActivation(false);\n        }\n    }, [idChecked, nameChecked, validPw, pwChecked]);\n\n    return (\n        <Form \n            onSubmit={(e) => {e.preventDefault();}}\n            ref={formdataRef}\n            name=\"signup\"\n            style={{height:'400px', marginTop:'30px'}} \n            >\n            <Title style={{width:'70%', fontSize: '1.5rem'}}>정보입력</Title>\n            {/* id input */}\n            <InputContainer2 ref={inputContRef_id}>\n                <Input2 ref={inputRef_id} type=\"text\" value={id} placeholder=\"아이디\" autoComplete=\"off\"\n                    name=\"user_id\"\n                    onChange={onChangeId} \n                    onFocus={()=>setIdFocus(true)}\n                    />\n                <VerifyBtn className=\"btn-hover\" onClick={verifyId}>중복확인</VerifyBtn>\n            </InputContainer2>\n            <Indicator style={{color:idChecked?'':'#B36A59'}}>\n                {idChecked ? '사용 가능한 아이디입니다.' : idFocus && '아이디 중복확인을 해주세요'}\n            </Indicator>\n            {/* name input */}\n            <InputContainer2 ref={inputContRef_name}>\n                <Input2 ref={inputRef_name} type=\"text\" value={name} placeholder=\"닉네임\" autoComplete=\"off\"\n                    name=\"user_name\"\n                    onChange={onChangeName} \n                    onFocus={()=>setNameFocus(true)}\n                    />\n                <VerifyBtn className=\"btn-hover\" onClick={verifyName}>중복확인</VerifyBtn>\n            </InputContainer2>\n            <Indicator style={{color:nameChecked?'':'#B36A59'}}>\n                {nameChecked ? '사용 가능한 닉네임입니다.' : nameFocus && '닉네임 중복확인을 해주세요'}\n            </Indicator>\n            {/* pw input */}\n            <InputContainer2>\n                <Input2 type=\"password\" value={password} placeholder=\"비밀번호\" autoComplete=\"off\" \n                    name=\"user_password\"\n                    onChange={isValidPw} \n                    onFocus={()=>setPwFocus(true)}\n                    />\n            </InputContainer2>\n            <Indicator style={{color:validPw?'':'#B36A59'}}>\n                {validPw ? '사용 가능한 비밀번호입니다.' : pwFocus && '영어 대소문자와 숫자로 이루어진 8~15자의 비밀번호를 사용하세요.'}\n            </Indicator>\n            {/* pw verify input */}\n            <InputContainer2>\n                <Input2 type=\"password\" value={password2} placeholder=\"비밀번호 확인\" autoComplete=\"off\" \n                    onChange={verifyPw} \n                    onFocus={()=>setPw2Focus(true)}\n                    />\n            </InputContainer2>\n            <Indicator style={{color:pwChecked?'':'#B36A59'}}>\n                {pwChecked ? '비밀번호가 일치합니다.' : pw2Focus && '비밀번호가 일치하지 않습니다.'}\n            </Indicator>\n            <ButtonContainer style={{width:'70%', justifyContent:'flex-end'}}>\n                <Button \n                onClick={submitSignupData}\n                className={btnActivation ? \"btn-hover\" : \"\"}\n                style={{\n                    width:'30%',\n                    backgroundColor: btnActivation?'#4c4a49':'rgba(76, 74, 73, 0.55)'\n                    }}>\n                    회원가입\n                </Button>\n            </ButtonContainer>\n        </Form>\n    );\n};\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}