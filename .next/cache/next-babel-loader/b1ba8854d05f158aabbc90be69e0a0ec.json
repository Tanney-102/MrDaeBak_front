{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/LoginForm/index.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport theme from '../../style/theme';\nimport useInput from '../../hooks/useInput';\nimport { Form, Title, InputContainer, Input, ButtonContainer, Button, Partition, HorizontalLine, GuestLogin } from './style';\n\nconst LoginForm = ({\n  loginType\n}) => {\n  const [id, onChangeId] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: btnActivation,\n    1: setBtnActivation\n  } = useState(false);\n  useEffect(() => {\n    if (id != '' && password.length > 5) {\n      setBtnActivation(true);\n    } else {\n      setBtnActivation(false);\n    }\n  }, [id, password]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: e => {\n      e.preventDefault();\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: loginType === 'member' ? '회원 로그인' : '관리자 로그인'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: id,\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        autoComplete: \"off\",\n        onChange: onChangeId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        value: password,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        autoComplete: \"off\",\n        onChange: onChangePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      style: {\n        justifyContent: ''\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: btnActivation ? \"btn-hover\" : \"\",\n        style: {\n          backgroundColor: btnActivation ? '#4c4a49' : 'rgba(76, 74, 73, 0.55)'\n        },\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), loginType === 'member' && /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-hover\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Partition, {\n      children: [/*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '0.9rem',\n          color: theme.fontGray\n        },\n        children: \"\\uB610\\uB294\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GuestLogin, {\n      className: \"btn-hover\",\n      type: \"button\",\n      children: \"\\uBE44\\uD68C\\uC6D0\\uC73C\\uB85C \\uC8FC\\uBB38\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\nLoginForm.propTypes = {\n  loginType: PropTypes.string.isRequired\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/LoginForm/index.js"],"names":["React","useState","useEffect","useCallback","PropTypes","Link","theme","useInput","Form","Title","InputContainer","Input","ButtonContainer","Button","Partition","HorizontalLine","GuestLogin","LoginForm","loginType","id","onChangeId","password","onChangePassword","btnActivation","setBtnActivation","length","e","preventDefault","justifyContent","backgroundColor","fontSize","color","fontGray","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\n\nimport theme from '../../style/theme';\nimport useInput from '../../hooks/useInput';\nimport { Form, Title, InputContainer, Input, ButtonContainer, Button, Partition, HorizontalLine, GuestLogin } from './style'; \n\nconst LoginForm = ({ loginType }) => {\n    const [id, onChangeId] = useInput('');\n    const [password, onChangePassword] = useInput('');\n    const [btnActivation, setBtnActivation] = useState(false);\n\n    useEffect(() => {\n        if(id != '' && password.length > 5) {\n            setBtnActivation(true);\n        } else {\n            setBtnActivation(false);\n        }\n    }, [id, password]);\n\n    return (\n        <Form onSubmit={e => { e.preventDefault(); }}>\n            <Title>{loginType==='member' ? '회원 로그인' : '관리자 로그인'}</Title>\n            <InputContainer className=\"input-container\">\n                <Input type=\"text\" value={id} placeholder=\"아이디\" autoComplete=\"off\" onChange={onChangeId} />\n            </InputContainer>\n            <InputContainer className=\"input-container\">\n                <Input type=\"password\" value={password} placeholder=\"비밀번호\" autoComplete=\"off\" onChange={onChangePassword} />\n            </InputContainer>\n            <ButtonContainer style={{justifyContent:''}}>\n                <Button className={btnActivation ? \"btn-hover\" : \"\"} style={{backgroundColor: btnActivation?'#4c4a49':'rgba(76, 74, 73, 0.55)'}}>\n                    로그인\n                </Button>\n                {loginType === 'member' && <Button className=\"btn-hover\">\n                    <Link href=\"/signup\"><a>    \n                        회원가입\n                    </a></Link>\n                </Button>}\n            </ButtonContainer>\n            <Partition>\n                <HorizontalLine />\n                <span style={{fontSize: '0.9rem', color: theme.fontGray}}>또는</span>\n                <HorizontalLine />\n            </Partition>\n            <GuestLogin className=\"btn-hover\" type=\"button\">비회원으로 주문하기</GuestLogin>\n        </Form>\n    );\n};\n\nLoginForm.propTypes = {\n    loginType: PropTypes.string.isRequired,\n};\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}