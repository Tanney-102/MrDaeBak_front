{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/SignupForm/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport useInput from '../../hooks/useInput';\nimport { Form, ButtonContainer, Button } from '../LoginForm/style';\nimport { Title, VerifyBtn, InputContainer2, Input2, Indicator } from './style';\nvar url = 'https://mr-daebak.herokuapp.com'; // const url = 'http://localhost:5000'\n\nvar SignupForm = function SignupForm() {\n  _s();\n\n  var _jsxDEV2;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      name = _useInput4[0],\n      onChangeName = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var _useInput7 = useInput(''),\n      _useInput8 = _slicedToArray(_useInput7, 2),\n      password2 = _useInput8[0],\n      onChangePassword2 = _useInput8[1];\n\n  var _useState = useState(false),\n      idFocus = _useState[0],\n      setIdFocus = _useState[1];\n\n  var _useState2 = useState(false),\n      nameFocus = _useState2[0],\n      setNameFocus = _useState2[1];\n\n  var _useState3 = useState(false),\n      pwFocus = _useState3[0],\n      setPwFocus = _useState3[1];\n\n  var _useState4 = useState(false),\n      pw2Focus = _useState4[0],\n      setPw2Focus = _useState4[1];\n\n  var _useState5 = useState(false),\n      idChecked = _useState5[0],\n      setIdChecked = _useState5[1];\n\n  var _useState6 = useState(false),\n      nameChecked = _useState6[0],\n      setNameChecked = _useState6[1];\n\n  var _useState7 = useState(false),\n      validPw = _useState7[0],\n      setValidPw = _useState7[1];\n\n  var _useState8 = useState(false),\n      pwChecked = _useState8[0],\n      setPwChecked = _useState8[1];\n\n  var _useState9 = useState(false),\n      btnActivation = _useState9[0],\n      setBtnActivation = _useState9[1];\n\n  var inputRef_id = useRef(null);\n  var inputRef_name = useRef(null);\n  var inputContRef_id = useRef(null);\n  var inputContRef_name = useRef(null);\n  var formdataRef = useRef(null);\n  var verifyId = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!idChecked) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return axios.post(url + '/duplicate_id', {\n              user_id: id\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then(function (res) {\n              if (res.data.check_id_dup && confirm('사용가능한 아이디입니다. 사용하시겠습니까?')) {\n                setIdChecked(true);\n                inputRef_id.current.setAttribute('readonly', 'readonly');\n                inputRef_id.current.style.backgroundColor = '#dfdfdf';\n                inputContRef_id.current.style.backgroundColor = '#dfdfdf';\n              } else {\n                alert('이미 사용 중인 아이디입니다.');\n              }\n            })[\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [id, idChecked]);\n  var verifyName = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!nameChecked) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            _context2.next = 4;\n            return axios.post(url + '/duplicate_name', {\n              user_name: name\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then(function (res) {\n              if (res.data.check_name_dup && confirm('사용가능한 닉네임입니다. 사용하시겠습니까?')) {\n                setNameChecked(true);\n                inputRef_name.current.setAttribute('readonly', 'readonly');\n                inputRef_name.current.style.backgroundColor = '#dfdfdf';\n                inputContRef_name.current.style.backgroundColor = '#dfdfdf';\n              } else {\n                alert('이미 사용 중인 닉네임입니다.');\n              }\n            })[\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [name, nameChecked]);\n  var isValidPw = useCallback(function (e) {\n    onChangePassword(e);\n\n    if (/^[a-zA-Z0-9]{8,15}$/.test(e.target.value)) {\n      setValidPw(true);\n    } else {\n      setValidPw(false);\n    }\n  }, [password]);\n  var verifyPw = useCallback(function (e) {\n    onChangePassword2(e);\n\n    if (password === e.target.value) {\n      setPwChecked(true);\n    } else {\n      setPwChecked(false);\n    }\n  }, [password, password2]);\n  var submitSignupData = useCallback( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              data = new FormData(formdataRef.current);\n              _context3.next = 3;\n              return axios.post(url + '/signup_db', data).then(function (res) {\n                alert(\"가입에 성공했습니다! 로그인해주세요.\");\n                location.href = \"/\";\n              })[\"catch\"](function (err) {\n                return console.error(err);\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), []);\n  useEffect(function () {\n    if (idChecked && nameChecked && validPw && pwChecked) {\n      setBtnActivation(true);\n    } else {\n      setBtnActivation(false);\n    }\n  }, [idChecked, nameChecked, validPw, pwChecked]);\n  return /*#__PURE__*/_jsxDEV(Form, (_jsxDEV2 = {\n    onSubmit: function onSubmit(e) {\n      console.log(\"test\");\n      e.preventDefault();\n    },\n    ref: formdataRef,\n    name: \"signup\",\n    style: {\n      height: '400px',\n      marginTop: '30px'\n    }\n  }, _defineProperty(_jsxDEV2, \"onSubmit\", submitSignupData), _defineProperty(_jsxDEV2, \"children\", [/*#__PURE__*/_jsxDEV(Title, {\n    children: \"\\uC815\\uBCF4\\uC785\\uB825\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 13\n  }, _this), /*#__PURE__*/_jsxDEV(InputContainer2, {\n    ref: inputContRef_id,\n    children: [/*#__PURE__*/_jsxDEV(Input2, {\n      ref: inputRef_id,\n      type: \"text\",\n      value: id,\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      autoComplete: \"off\",\n      name: \"user_id\",\n      onChange: onChangeId,\n      onFocus: function onFocus() {\n        return setIdFocus(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, _this), /*#__PURE__*/_jsxDEV(VerifyBtn, {\n      className: \"btn-hover\",\n      onClick: verifyId,\n      children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 13\n  }, _this), /*#__PURE__*/_jsxDEV(Indicator, {\n    style: {\n      color: idChecked ? '' : '#B36A59'\n    },\n    children: idChecked ? '사용 가능한 아이디입니다.' : idFocus && '아이디 중복확인을 해주세요'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 13\n  }, _this), /*#__PURE__*/_jsxDEV(InputContainer2, {\n    ref: inputContRef_name,\n    children: [/*#__PURE__*/_jsxDEV(Input2, {\n      ref: inputRef_name,\n      type: \"text\",\n      value: name,\n      placeholder: \"\\uB2C9\\uB124\\uC784\",\n      autoComplete: \"off\",\n      name: \"user_name\",\n      onChange: onChangeName,\n      onFocus: function onFocus() {\n        return setNameFocus(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, _this), /*#__PURE__*/_jsxDEV(VerifyBtn, {\n      className: \"btn-hover\",\n      onClick: verifyName,\n      children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 13\n  }, _this), /*#__PURE__*/_jsxDEV(Indicator, {\n    style: {\n      color: nameChecked ? '' : '#B36A59'\n    },\n    children: nameChecked ? '사용 가능한 닉네임입니다.' : nameFocus && '닉네임 중복확인을 해주세요'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 13\n  }, _this), /*#__PURE__*/_jsxDEV(InputContainer2, {\n    children: /*#__PURE__*/_jsxDEV(Input2, {\n      type: \"password\",\n      value: password,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      autoComplete: \"off\",\n      name: \"user_password\",\n      onChange: isValidPw,\n      onFocus: function onFocus() {\n        return setPwFocus(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 13\n  }, _this), /*#__PURE__*/_jsxDEV(Indicator, {\n    style: {\n      color: validPw ? '' : '#B36A59'\n    },\n    children: validPw ? '사용 가능한 비밀번호입니다.' : pwFocus && '영어 대소문자와 숫자로 이루어진 8~15자의 비밀번호를 사용하세요.'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 13\n  }, _this), /*#__PURE__*/_jsxDEV(InputContainer2, {\n    children: /*#__PURE__*/_jsxDEV(Input2, {\n      type: \"password\",\n      value: password2,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      autoComplete: \"off\",\n      onChange: verifyPw,\n      onFocus: function onFocus() {\n        return setPw2Focus(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 13\n  }, _this), /*#__PURE__*/_jsxDEV(Indicator, {\n    style: {\n      color: pwChecked ? '' : '#B36A59'\n    },\n    children: pwChecked ? '비밀번호가 일치합니다.' : pw2Focus && '비밀번호가 일치하지 않습니다.'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 13\n  }, _this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n    style: {\n      width: '70%',\n      justifyContent: 'flex-end'\n    },\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: submitSignupData,\n      className: btnActivation ? \"btn-hover\" : \"\",\n      style: {\n        width: '30%',\n        backgroundColor: btnActivation ? '#4c4a49' : 'rgba(76, 74, 73, 0.55)'\n      },\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 13\n  }, _this)]), _jsxDEV2), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(SignupForm, \"BD1mG3ljNY0646BLdtMM0vjJvO0=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/SignupForm/index.js"],"names":["React","useCallback","useState","useRef","useEffect","axios","useInput","Form","ButtonContainer","Button","Title","VerifyBtn","InputContainer2","Input2","Indicator","url","SignupForm","id","onChangeId","name","onChangeName","password","onChangePassword","password2","onChangePassword2","idFocus","setIdFocus","nameFocus","setNameFocus","pwFocus","setPwFocus","pw2Focus","setPw2Focus","idChecked","setIdChecked","nameChecked","setNameChecked","validPw","setValidPw","pwChecked","setPwChecked","btnActivation","setBtnActivation","inputRef_id","inputRef_name","inputContRef_id","inputContRef_name","formdataRef","verifyId","post","user_id","headers","then","res","data","check_id_dup","confirm","current","setAttribute","style","backgroundColor","alert","err","console","error","verifyName","user_name","check_name_dup","isValidPw","e","test","target","value","verifyPw","submitSignupData","FormData","location","href","log","preventDefault","height","marginTop","color","width","justifyContent"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useRef, useEffect } from 'react'\nimport axios from 'axios';\n\nimport useInput from '../../hooks/useInput';\nimport { Form, ButtonContainer, Button} from '../LoginForm/style';\nimport { Title, VerifyBtn, InputContainer2, Input2, Indicator} from './style';\n\nconst url = 'https://mr-daebak.herokuapp.com'\n// const url = 'http://localhost:5000'\n\nconst SignupForm = () => {\n    const [id, onChangeId] = useInput('');\n    const [name ,onChangeName] = useInput('');\n    const [password, onChangePassword] = useInput('');\n    const [password2, onChangePassword2] =useInput('');\n    const [idFocus, setIdFocus] = useState(false);\n    const [nameFocus, setNameFocus] = useState(false);\n    const [pwFocus, setPwFocus] = useState(false);\n    const [pw2Focus, setPw2Focus] = useState(false);\n    const [idChecked, setIdChecked] = useState(false);\n    const [nameChecked, setNameChecked] = useState(false);\n    const [validPw, setValidPw] = useState(false);\n    const [pwChecked, setPwChecked] = useState(false);\n    const [btnActivation, setBtnActivation] = useState(false);\n    const inputRef_id = useRef(null);\n    const inputRef_name = useRef(null);\n    const inputContRef_id = useRef(null);\n    const inputContRef_name = useRef(null);\n    const formdataRef = useRef(null);\n\n    const verifyId = useCallback(async () => {\n        if(idChecked) return;\n\n        await axios.post(url+'/duplicate_id', {\n                user_id : id\n            }, {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n        .then(res => {\n            if(res.data.check_id_dup && confirm('사용가능한 아이디입니다. 사용하시겠습니까?')) {\n                setIdChecked(true);\n                inputRef_id.current.setAttribute('readonly', 'readonly');\n                inputRef_id.current.style.backgroundColor = '#dfdfdf'\n                inputContRef_id.current.style.backgroundColor = '#dfdfdf'\n            } else {\n                alert('이미 사용 중인 아이디입니다.');\n            }\n        })\n        .catch(err => console.error(err));\n    }, [id, idChecked]);\n\n    const verifyName = useCallback(async () => {\n        if(nameChecked) return;\n\n        await axios.post(url+'/duplicate_name', {\n            user_name : name\n        }, {\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    })\n    .then(res => {\n        if(res.data.check_name_dup && confirm('사용가능한 닉네임입니다. 사용하시겠습니까?')) {\n            setNameChecked(true);\n            inputRef_name.current.setAttribute('readonly', 'readonly');\n            inputRef_name.current.style.backgroundColor = '#dfdfdf'\n            inputContRef_name.current.style.backgroundColor = '#dfdfdf'\n        } else {\n            alert('이미 사용 중인 닉네임입니다.');\n        }\n    })\n    .catch(err => console.error(err));\n    }, [name, nameChecked]);\n\n    const isValidPw = useCallback((e) => {\n        onChangePassword(e);\n\n        if(/^[a-zA-Z0-9]{8,15}$/.test(e.target.value)) {\n            setValidPw(true);\n        } else {\n            setValidPw(false);\n        }\n\n    }, [password]);\n\n    const verifyPw = useCallback((e) => {\n        onChangePassword2(e);\n\n        if(password === e.target.value) {\n            setPwChecked(true);\n        } else {\n            setPwChecked(false);\n        }\n    }, [password, password2]);\n\n    const submitSignupData = useCallback(async (e) => {\n        const data = new FormData(formdataRef.current);\n\n        await axios.post(url+'/signup_db', data)\n        .then(res => {\n            alert(\"가입에 성공했습니다! 로그인해주세요.\");\n            location.href=\"/\"\n        })\n        .catch(err => console.error(err));\n    }, []);\n    \n    useEffect(() => {\n        if(idChecked && nameChecked && validPw && pwChecked) {\n            setBtnActivation(true);\n        } else {\n            setBtnActivation(false);\n        }\n    }, [idChecked, nameChecked, validPw, pwChecked]);\n\n    return (\n        <Form \n            onSubmit={(e) => {console.log(\"test\"); e.preventDefault();}}\n            ref={formdataRef}\n            name=\"signup\"\n            style={{height:'400px', marginTop:'30px'}} \n            onSubmit={submitSignupData}\n            >\n            <Title>정보입력</Title>\n            {/* id input */}\n            <InputContainer2 ref={inputContRef_id}>\n                <Input2 ref={inputRef_id} type=\"text\" value={id} placeholder=\"아이디\" autoComplete=\"off\"\n                    name=\"user_id\"\n                    onChange={onChangeId} \n                    onFocus={()=>setIdFocus(true)}\n                    />\n                <VerifyBtn className=\"btn-hover\" onClick={verifyId}>중복확인</VerifyBtn>\n            </InputContainer2>\n            <Indicator style={{color:idChecked?'':'#B36A59'}}>\n                {idChecked ? '사용 가능한 아이디입니다.' : idFocus && '아이디 중복확인을 해주세요'}\n            </Indicator>\n            {/* name input */}\n            <InputContainer2 ref={inputContRef_name}>\n                <Input2 ref={inputRef_name} type=\"text\" value={name} placeholder=\"닉네임\" autoComplete=\"off\"\n                    name=\"user_name\"\n                    onChange={onChangeName} \n                    onFocus={()=>setNameFocus(true)}\n                    />\n                <VerifyBtn className=\"btn-hover\" onClick={verifyName}>중복확인</VerifyBtn>\n            </InputContainer2>\n            <Indicator style={{color:nameChecked?'':'#B36A59'}}>\n                {nameChecked ? '사용 가능한 닉네임입니다.' : nameFocus && '닉네임 중복확인을 해주세요'}\n            </Indicator>\n            {/* pw input */}\n            <InputContainer2>\n                <Input2 type=\"password\" value={password} placeholder=\"비밀번호\" autoComplete=\"off\" \n                    name=\"user_password\"\n                    onChange={isValidPw} \n                    onFocus={()=>setPwFocus(true)}\n                    />\n            </InputContainer2>\n            <Indicator style={{color:validPw?'':'#B36A59'}}>\n                {validPw ? '사용 가능한 비밀번호입니다.' : pwFocus && '영어 대소문자와 숫자로 이루어진 8~15자의 비밀번호를 사용하세요.'}\n            </Indicator>\n            {/* pw verify input */}\n            <InputContainer2>\n                <Input2 type=\"password\" value={password2} placeholder=\"비밀번호 확인\" autoComplete=\"off\" \n                    onChange={verifyPw} \n                    onFocus={()=>setPw2Focus(true)}\n                    />\n            </InputContainer2>\n            <Indicator style={{color:pwChecked?'':'#B36A59'}}>\n                {pwChecked ? '비밀번호가 일치합니다.' : pw2Focus && '비밀번호가 일치하지 않습니다.'}\n            </Indicator>\n            <ButtonContainer style={{width:'70%', justifyContent:'flex-end'}}>\n                <Button \n                onClick={submitSignupData}\n                className={btnActivation ? \"btn-hover\" : \"\"}\n                style={{\n                    width:'30%',\n                    backgroundColor: btnActivation?'#4c4a49':'rgba(76, 74, 73, 0.55)'\n                    }}>\n                    회원가입\n                </Button>\n            </ButtonContainer>\n        </Form>\n    );\n};\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}