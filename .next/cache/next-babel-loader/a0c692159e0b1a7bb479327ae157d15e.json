{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/SignupForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport useInput from '../hooks/useInput';\nimport theme from '../style/theme';\nimport { Form, InputContainer, Input } from './LoginForm/style';\nvar url = 'https://mr-daebak.herokuapp.com'; // const url = 'http://localhost:5000'\n\nvar VerifyBtn = styled.button.withConfig({\n  displayName: \"SignupForm__VerifyBtn\",\n  componentId: \"pv1d3z-0\"\n})([\"width:19%;color:#5DB09B;font-size:0.7rem;@media \", \"{font-size:0.6rem;width:23%}\"], theme.mobileL);\n_c = VerifyBtn;\nvar InputContainer2 = styled(InputContainer).withConfig({\n  displayName: \"SignupForm__InputContainer2\",\n  componentId: \"pv1d3z-1\"\n})([\"width:70%;@media \", \"{width:85%}@media \", \"{width:95%\"], theme.mobileL, theme.mobileS);\n_c2 = InputContainer2;\nvar Input2 = styled(Input).withConfig({\n  displayName: \"SignupForm__Input2\",\n  componentId: \"pv1d3z-2\"\n})([\"width:80%;@media \", \"{width:76%}\"], theme.mobileL);\n_c3 = Input2;\nvar Indicator = styled.div.withConfig({\n  displayName: \"SignupForm__Indicator\",\n  componentId: \"pv1d3z-3\"\n})([\"width:70%;height:15px;padding:0 4px;color:#5DB09B;font-size:0.7rem;display:flex;align-items:center;\"]);\n_c4 = Indicator;\n\nvar SignupForm = function SignupForm() {\n  _s();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      name = _useInput4[0],\n      onChangeName = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var _useInput7 = useInput(''),\n      _useInput8 = _slicedToArray(_useInput7, 2),\n      password2 = _useInput8[0],\n      onChangePassword2 = _useInput8[1];\n\n  var _useState = useState(false),\n      idFocus = _useState[0],\n      setIdFocus = _useState[1];\n\n  var _useState2 = useState(false),\n      nameFocus = _useState2[0],\n      setNameFocus = _useState2[1];\n\n  var _useState3 = useState(false),\n      pwFocus = _useState3[0],\n      setPwFocus = _useState3[1];\n\n  var _useState4 = useState(false),\n      Pw2Focus = _useState4[0],\n      setPw2Focus = _useState4[1];\n\n  var _useState5 = useState(false),\n      idChecked = _useState5[0],\n      setIdChecked = _useState5[1];\n\n  var _useState6 = useState(false),\n      nameChecked = _useState6[0],\n      setNameChecked = _useState6[1];\n\n  var _useState7 = useState(false),\n      validPw = _useState7[0],\n      setValidPw = _useState7[1];\n\n  var _useState8 = useState(false),\n      pwChecked = _useState8[0],\n      setPwChecked = _useState8[1];\n\n  var _useState9 = useState(false),\n      btnActivation = _useState9[0],\n      setBtnActivation = _useState9[1];\n\n  var inputRef_id = useRef(null);\n  var inputRef_name = useRef(null);\n  var inputContRef_id = useRef(null);\n  var inputContRef_name = useRef(null);\n  var verifyId = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!idChecked) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return axios.post(url + '/duplicate_id', {\n              user_id: id\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then(function (res) {\n              if (res.data.check_id_dup && confirm('사용가능한 아이디입니다. 사용하시겠습니까?')) {\n                setIdChecked(true);\n                inputRef_id.current.setAttribute('readonly', 'readonly');\n                inputRef_id.current.style.backgroundColor = '#dfdfdf';\n                inputContRef_id.current.style.backgroundColor = '#dfdfdf';\n              } else {\n                alert('이미 사용 중인 아이디입니다.');\n              }\n            })[\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [id, idChecked]);\n  var verifyName = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!nameChecked) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            _context2.next = 4;\n            return axios.post(url + '/duplicate_name', {\n              user_name: name\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then(function (res) {\n              if (res.data.check_name_dup && confirm('사용가능한 닉네임입니다. 사용하시겠습니까?')) {\n                setNameChecked(true);\n                inputRef_name.current.setAttribute('readonly', 'readonly');\n                inputRef_name.current.style.backgroundColor = '#dfdfdf';\n                inputContRef_name.current.style.backgroundColor = '#dfdfdf';\n              } else {\n                alert('이미 사용 중인 닉네임입니다.');\n              }\n            })[\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [name, nameChecked]);\n  var isValidPw = useCallback(function (e) {\n    onChangePassword(e);\n\n    if (/^[a-zA-Z0-9]{8,15}$/.test(password)) {\n      setValidPw(true);\n    } else {\n      setValidPw(false);\n    }\n  }, [password]);\n  var verifyPw = useCallback(function (e) {\n    onChangePassword2(e);\n\n    if (password === password2) {\n      setPwChecked(true);\n    } else {\n      setPwChecked(false);\n    }\n  }, [password, password2]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      height: '400px',\n      marginTop: '30px'\n    },\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputContainer2, {\n      ref: inputContRef_id,\n      children: [/*#__PURE__*/_jsxDEV(Input2, {\n        ref: inputRef_id,\n        type: \"text\",\n        value: id,\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        autoComplete: \"off\",\n        onChange: onChangeId,\n        onFocus: function onFocus() {\n          return setIdFocus(true);\n        },\n        onBlur: function onBlur() {\n          return setIdFocus(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(VerifyBtn, {\n        className: \"btn-hover\",\n        onClick: verifyId,\n        children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Indicator, {\n      style: {\n        color: idChecked ? '' : '#B36A59'\n      },\n      children: idChecked ? '사용 가능한 아이디입니다.' : idFocus && '아이디 중복확인을 해주세요'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(InputContainer2, {\n      ref: inputContRef_name,\n      children: [/*#__PURE__*/_jsxDEV(Input2, {\n        ref: inputRef_name,\n        type: \"text\",\n        value: name,\n        placeholder: \"\\uB2C9\\uB124\\uC784\",\n        autoComplete: \"off\",\n        onChange: onChangeName,\n        onFocus: function onFocus() {\n          return setNameFocus(true);\n        },\n        onBlur: function onBlur() {\n          return setNameFocus(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(VerifyBtn, {\n        className: \"btn-hover\",\n        onClick: verifyName,\n        children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Indicator, {\n      style: {\n        color: idChecked ? '' : '#B36A59'\n      },\n      children: nameChecked ? '사용 가능한 닉네임입니다.' : nameFocus && '닉네임 중복확인을 해주세요'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(InputContainer2, {\n      children: /*#__PURE__*/_jsxDEV(Input2, {\n        type: \"password\",\n        value: password,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        autoComplete: \"off\",\n        onChange: isValidPw,\n        onFocus: function onFocus() {\n          return setPwFocus(true);\n        },\n        onBlur: function onBlur() {\n          return setPwFocus(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Indicator, {\n      style: {\n        color: validPw ? '' : '#B36A59'\n      },\n      children: validPw ? '사용 가능한 비밀번호입니다.' : pwFocus && '영어 대소문자와 숫자로 이루어진 8~15자의 비밀번호를 사용하세요.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(InputContainer2, {\n      children: [/*#__PURE__*/_jsxDEV(Input2, {\n        type: \"password\",\n        value: password2,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        autoComplete: \"off\",\n        onChange: verifyPw,\n        onFocus: function onFocus() {\n          return setPw2Focus(true);\n        },\n        onBlur: function onBlur() {\n          return setPw2Focus(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Indicator, {\n        style: {\n          color: pwChecked ? '' : '#B36A59'\n        },\n        children: pwChecked ? '비밀번호가 일치합니다.' : pw2Focus && '비밀번호가 일치하지 않습니다.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(SignupForm, \"8TkDQCp0wHeOdAyWwir+zYZeSYE=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c5 = SignupForm;\nexport default SignupForm;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"VerifyBtn\");\n$RefreshReg$(_c2, \"InputContainer2\");\n$RefreshReg$(_c3, \"Input2\");\n$RefreshReg$(_c4, \"Indicator\");\n$RefreshReg$(_c5, \"SignupForm\");","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/MrDaeBak/MrDaeBak_front/components/SignupForm.js"],"names":["React","useCallback","useState","useRef","useEffect","axios","styled","useInput","theme","Form","InputContainer","Input","url","VerifyBtn","button","mobileL","InputContainer2","mobileS","Input2","Indicator","div","SignupForm","id","onChangeId","name","onChangeName","password","onChangePassword","password2","onChangePassword2","idFocus","setIdFocus","nameFocus","setNameFocus","pwFocus","setPwFocus","Pw2Focus","setPw2Focus","idChecked","setIdChecked","nameChecked","setNameChecked","validPw","setValidPw","pwChecked","setPwChecked","btnActivation","setBtnActivation","inputRef_id","inputRef_name","inputContRef_id","inputContRef_name","verifyId","post","user_id","headers","then","res","data","check_id_dup","confirm","current","setAttribute","style","backgroundColor","alert","err","console","error","verifyName","user_name","check_name_dup","isValidPw","e","test","verifyPw","height","marginTop","preventDefault","color","pw2Focus"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useRef, useEffect } from 'react'\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport useInput from '../hooks/useInput';\nimport theme from '../style/theme';\nimport { Form, InputContainer, Input } from './LoginForm/style';\n\nconst url = 'https://mr-daebak.herokuapp.com'\n// const url = 'http://localhost:5000'\n\nconst VerifyBtn = styled.button`\n    width: 19%;\n    color:#5DB09B;\n    font-size:0.7rem;\n\n    @media ${theme.mobileL} {\n        font-size:0.6rem;\n        width:23%\n    }\n`;\n\nconst InputContainer2 = styled(InputContainer)`\n    width:70%;\n\n    @media ${theme.mobileL} {\n        width:85%\n    }\n\n    @media ${theme.mobileS} {\n        width:95%\n            \n`;\n\nconst Input2 = styled(Input)`\n    width:80%;\n\n    @media ${theme.mobileL} {\n        width:76%\n    }    \n`;\n\nconst Indicator = styled.div`\n    width: 70%;\n    height:15px;\n    padding: 0 4px;\n    color:#5DB09B;\n    font-size:0.7rem;\n\n    display:flex;\n    align-items:center;\n`;\n\nconst SignupForm = () => {\n    const [id, onChangeId] = useInput('');\n    const [name ,onChangeName] = useInput('');\n    const [password, onChangePassword] = useInput('');\n    const [password2, onChangePassword2] =useInput('');\n    const [idFocus, setIdFocus] = useState(false);\n    const [nameFocus, setNameFocus] = useState(false);\n    const [pwFocus, setPwFocus] = useState(false);\n    const [Pw2Focus, setPw2Focus] = useState(false);\n    const [idChecked, setIdChecked] = useState(false);\n    const [nameChecked, setNameChecked] = useState(false);\n    const [validPw, setValidPw] = useState(false);\n    const [pwChecked, setPwChecked] = useState(false);\n    const [btnActivation, setBtnActivation] = useState(false);\n    const inputRef_id = useRef(null);\n    const inputRef_name = useRef(null);\n    const inputContRef_id = useRef(null);\n    const inputContRef_name = useRef(null);\n\n    const verifyId = useCallback(async () => {\n        if(idChecked) return;\n\n        await axios.post(url+'/duplicate_id', {\n                user_id : id\n            }, {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n        .then(res => {\n            if(res.data.check_id_dup && confirm('사용가능한 아이디입니다. 사용하시겠습니까?')) {\n                setIdChecked(true);\n                inputRef_id.current.setAttribute('readonly', 'readonly');\n                inputRef_id.current.style.backgroundColor = '#dfdfdf'\n                inputContRef_id.current.style.backgroundColor = '#dfdfdf'\n            } else {\n                alert('이미 사용 중인 아이디입니다.');\n            }\n        })\n        .catch(err => console.error(err));\n    }, [id, idChecked]);\n\n    const verifyName = useCallback(async () => {\n        if(nameChecked) return;\n\n        await axios.post(url+'/duplicate_name', {\n            user_name : name\n        }, {\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    })\n    .then(res => {\n        if(res.data.check_name_dup && confirm('사용가능한 닉네임입니다. 사용하시겠습니까?')) {\n            setNameChecked(true);\n            inputRef_name.current.setAttribute('readonly', 'readonly');\n            inputRef_name.current.style.backgroundColor = '#dfdfdf'\n            inputContRef_name.current.style.backgroundColor = '#dfdfdf'\n        } else {\n            alert('이미 사용 중인 닉네임입니다.');\n        }\n    })\n    .catch(err => console.error(err));\n    }, [name, nameChecked]);\n\n    const isValidPw = useCallback((e) => {\n        onChangePassword(e);\n\n        if(/^[a-zA-Z0-9]{8,15}$/.test(password)) {\n            setValidPw(true);\n        } else {\n            setValidPw(false);\n        }\n\n    }, [password]);\n\n    const verifyPw = useCallback((e) => {\n        onChangePassword2(e);\n\n        if(password === password2) {\n            setPwChecked(true);\n        } else {\n            setPwChecked(false);\n        }\n    }, [password, password2]);\n    \n    return (\n        <Form style={{height:'400px', marginTop:'30px'}} onSubmit={e => { e.preventDefault(); }}>\n            {/* id input */}\n            <InputContainer2 ref={inputContRef_id}>\n                <Input2 ref={inputRef_id} type=\"text\" value={id} placeholder=\"아이디\" autoComplete=\"off\"\n                    onChange={onChangeId} \n                    onFocus={()=>setIdFocus(true)}\n                    onBlur={()=>setIdFocus(false)}\n                    />\n                <VerifyBtn className=\"btn-hover\" onClick={verifyId}>중복확인</VerifyBtn>\n            </InputContainer2>\n            <Indicator style={{color:idChecked?'':'#B36A59'}}>\n                {idChecked ? '사용 가능한 아이디입니다.' : idFocus && '아이디 중복확인을 해주세요'}\n            </Indicator>\n            {/* name input */}\n            <InputContainer2 ref={inputContRef_name}>\n                <Input2 ref={inputRef_name} type=\"text\" value={name} placeholder=\"닉네임\" autoComplete=\"off\"\n                    onChange={onChangeName} \n                    onFocus={()=>setNameFocus(true)}\n                    onBlur={()=>setNameFocus(false)}\n                    />\n                <VerifyBtn className=\"btn-hover\" onClick={verifyName}>중복확인</VerifyBtn>\n            </InputContainer2>\n            <Indicator style={{color:idChecked?'':'#B36A59'}}>\n                {nameChecked ? '사용 가능한 닉네임입니다.' : nameFocus && '닉네임 중복확인을 해주세요'}\n            </Indicator>\n            {/* pw input */}\n            <InputContainer2>\n                <Input2 type=\"password\" value={password} placeholder=\"비밀번호\" autoComplete=\"off\" \n                    onChange={isValidPw} \n                    onFocus={()=>setPwFocus(true)}\n                    onBlur={()=>setPwFocus(false)}\n                    />\n            </InputContainer2>\n            <Indicator style={{color:validPw?'':'#B36A59'}}>\n                {validPw ? '사용 가능한 비밀번호입니다.' : pwFocus && '영어 대소문자와 숫자로 이루어진 8~15자의 비밀번호를 사용하세요.'}\n            </Indicator>\n            {/* pw verify input */}\n            <InputContainer2>\n                <Input2 type=\"password\" value={password2} placeholder=\"비밀번호 확인\" autoComplete=\"off\" \n                    onChange={verifyPw} \n                    onFocus={()=>setPw2Focus(true)}\n                    onBlur={()=>setPw2Focus(false)}\n                    />\n                <Indicator style={{color:pwChecked?'':'#B36A59'}}>\n                    {pwChecked ? '비밀번호가 일치합니다.' : pw2Focus && '비밀번호가 일치하지 않습니다.'}\n                </Indicator>\n            </InputContainer2>\n        </Form>\n    );\n};\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}